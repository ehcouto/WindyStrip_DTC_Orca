###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.5.7591/W32 for ARM        19/Nov/2024  13:15:34
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        ProjectSpecific\Application\ModeManagement\ModeManagement.c
#    Command line =  
#        -I./ -I../cx/ -I../cx/inc/ -ICategory/ -ICategory/Application/
#        -ICategory/Application/ApplicationWasherMcu/
#        -ICategory/Application/ApplicationWasherMcu/AnalysisAverage/
#        -ICategory/Application/ApplicationWasherMcu/Arbitration/
#        -ICategory/Application/ApplicationWasherMcu/Motion/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Motion/
#        -ICategory/Application/ApplicationWasherMcu/Motion/MotionError/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Pulse/
#        -ICategory/Application/ApplicationWasherMcu/Motion/RotateXDeg/
#        -ICategory/Application/ApplicationWasherMcu/Motion/SpinDrum/
#        -ICategory/Application/ApplicationWasherMcu/Motion/StopDrum/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Wash/
#        -ICategory/Application/ApplicationWasherMcu/MotorActivity/
#        -ICategory/Application/ApplicationWasherMcu/SpeedMaintain/
#        -ICategory/Application/BandLimiter/ -ICategory/Application/Beagle/
#        -ICategory/Application/CommandManager/
#        -ICategory/Application/DigitalFilter/
#        -ICategory/Application/Extraction/
#        -ICategory/Application/Extraction/CodeGeneration/
#        -ICategory/Application/Extraction/CodeGeneration/SharedUtils/
#        -ICategory/Application/Extraction/Dependencies/
#        -ICategory/Application/FaultManager/
#        -ICategory/Application/MciSensorsWm/ -ICategory/Application/MciSetWm/
#        -ICategory/Application/MciSetWmFloat/ -ICategory/Application/ParamEst/
#        -ICategory/Application/ParamEstExc/ -ICategory/Application/Params/
#        -ICategory/Application/ProtocolInfo/
#        -ICategory/Application/ProtocolMainExternal/
#        -ICategory/Application/SRMotorSafetyInfoParamsMgr_Core/
#        -ICategory/Application/ThermalModel/
#        -ICategory/Application/ThermalModel/ThermalModelCore/
#        -ICategory/Common/ -ICategory/Common/BoardDebugging/
#        -ICategory/Common/MasterCommander/
#        -ICategory/Common/MasterCommander/Source/
#        -ICategory/Common/MasterCommander/Source/HAL/ -ICategory/Hbl/
#        -IProjectSpecific/ -IProjectSpecific/Application/
#        -IProjectSpecific/Application/API007App/
#        -IProjectSpecific/Application/Api221_Filter_Mci_Err/
#        -IProjectSpecific/Application/ModeManagement/
#        -IProjectSpecific/Application/ProductInfo/
#        -IProjectSpecific/Application/RemoteFunctions/
#        -IProjectSpecific/Application/SRMcuSpeedMonitor/
#        -IProjectSpecific/Application/ThermalModel/
#        -IProjectSpecific/CommonCore/ -IProjectSpecific/Driver/
#        -IProjectSpecific/Indesit/ -IProjectSpecific/MasterCommander/
#        -IProjectSpecific/Mci/ -IProjectSpecific/Mci/Mcl/
#        -IProjectSpecific/Mci/Mcl/old_xls/ -IXCategory/
#        -IXCategory/Application/ -IXCategory/Application/MciParametersLoader/
#        -IXCategory/Application/Mode/ -IXCategory/Application/Reveal_APIs/
#        -IXCategory/Application/Reveal_APIs/API003Disc/
#        -IXCategory/Application/Reveal_APIs/API005LowLevel/
#        -IXCategory/Application/Reveal_APIs/API007Data/
#        -IXCategory/Application/Reveal_APIs/API009System/
#        -IXCategory/Application/Reveal_APIs/API010PollVar/
#        -IXCategory/Application/Reveal_APIs/API011AppCtr/
#        -IXCategory/Application/Reveal_APIs/API013RemoteFunction/
#        -IXCategory/Application/Reveal_APIs/API018Diagnostic/
#        -IXCategory/Application/Reveal_APIs/API019ProductInfo/
#        -IXCategory/Application/Reveal_APIs/API220MotorControl/
#        -IXCategory/Application/Reveal_APIs/API220MotorControl/API/
#        -IXCategory/Application/Reveal_APIs/API221MotionCtrl/
#        -IXCategory/Application/Reveal_APIs/SRAPI020Safety/
#        -IXCategory/Application/SFUpdater/ -IXCategory/Common/
#        -IXCategory/Common/Crc16/ -IXCategory/Common/Crc8/
#        -IXCategory/Common/Log/ -IXCategory/Common/SettingFile/
#        -IXCategory/Common/SRClockMonitor/ -IXCategory/Common/SRData/
#        -IXCategory/Common/SRException/ -IXCategory/Common/SRFlow/
#        -IXCategory/Common/SRIsrMonitor/ -IXCategory/Common/SRMain/
#        -IXCategory/Common/SRMcuSpeedMonitor/ -IXCategory/Common/SRPowerMgr/
#        -IXCategory/Common/SRSignature/ -IXCategory/Common/SRSystemConfig/
#        -IXCategory/Common/SRTimerReference/ -IXCategory/Common/SystemConfig/
#        -IXCategory/Common/SystemTimers/ -IXCategory/Common/Utilities/
#        -IXCategory/Driver/ -IXCategory/Driver/API/
#        -IXCategory/Driver/API/Comparator/ -IXCategory/Driver/API/DataFlash/
#        -IXCategory/Driver/API/Dma/ -IXCategory/Driver/API/Flash/
#        -IXCategory/Driver/API/Gpio/ -IXCategory/Driver/API/Micro/
#        -IXCategory/Driver/API/Spi/ -IXCategory/Driver/API/SRMCAtod/
#        -IXCategory/Driver/API/SRMCPwm/ -IXCategory/Driver/API/TimerInterrupt/
#        -IXCategory/Driver/API/Uart/ -IXCategory/Driver/Comparator/
#        -IXCategory/Driver/DataFlash/ -IXCategory/Driver/Dma/
#        -IXCategory/Driver/Flash/ -IXCategory/Driver/Gpio/
#        -IXCategory/Driver/Micro/ -IXCategory/Driver/Spi/
#        -IXCategory/Driver/SRMCAtod/ -IXCategory/Driver/SRMCPwm/
#        -IXCategory/Driver/TimerInterrupt/ -IXCategory/Driver/Uart/
#        -IXCategory/Hbl/ -IXCategory/Hbl/Mci/
#        -IXCategory/Hbl/Mci/InverterTemp/ -IXCategory/Hbl/Mci/Mcl/
#        -IXCategory/Hbl/Mci/Mcl/Braking/ -IXCategory/Hbl/Mci/Mcl/MacroBlocks/
#        -IXCategory/Hbl/Mci/Mcl/MclFvt/ -IXCategory/Hbl/Mci/Mcl/MicroBlocks/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/ClrkPark/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Filters/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Math/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Pi/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/PwmModulation/
#        -IXCategory/Hbl/Mci/Mcl/ResistanceEstimation/
#        -IXCategory/Hbl/Mci/PowerModuleManager/
#        -IXCategory/Hbl/Mci/SpeedRefGen/ -IXCategory/Hbl/Mci/SurgeRelay/
#        -IXCategory/Hbl/SRMotorSafetyMgr/
#        -IXCategory/Hbl/SRMotorSafetyMgr/API/ -IXCategory/Service/
#        -IXCategory/Service/Reveal/ -IXCategory/Service/Win/ --remarks
#        --no_tbaa --debug --use_c++_inline --only_stdout --dlib_config
#        ..\cx\inc\DLib_Config_Normal.h -r -D
#        ENABLE_JUMP_TO_APPLICATION_WITHOUT_IAP_FIRMWARE -D ARM_MATH_CM4 -e
#        --silent --endian=little --cpu Cortex-M4 --fpu=VFPv4_sp -Ohs -o
#        ModeManagement.obj -l ..\listings\ModeManagement.lst
#        ProjectSpecific\Application\ModeManagement\ModeManagement.c
#    List file    =  ..\listings\ModeManagement.lst
#    Object file  =  ModeManagement.obj
#
###############################################################################

C:\Data\Python\Windy_sBpm_Floating\source\ProjectSpecific\Application\ModeManagement\ModeManagement.c
      1          /**
      2           *  @file		ModeManagement.c
      3           *
      4           *  @brief      Basic description of file contents
      5           *
      6           *  @details    Detailed description of the file contents
      7           *
      8           *  @copyright  Copyright 2015-2016 Whirlpool Corporation. All rights reserved - CONFIDENTIAL
      9           */
     10          //---------------------------------------------------------------------------------------------------------------------
     11          //---------------------------------------------------------------------------------------------------------------------
     12          
     13          
     14          //-------------------------------------- Include Files ----------------------------------------------------------------
     15          #include "C_Extensions.h"
     16          #include "ModeManagement.h"
     17          #include "SRMicro.h"
     18          #include "Mode.h"
     19          #include "SFUpdater.h"

  PACKED typedef struct
         ^
"C:\Data\Python\Windy_sBpm_Floating\source\XCategory\Common\SettingFile\SettingFile.h",39  Remark[Pe082]: 
          storage class is not first

  PACKED typedef struct
         ^
"C:\Data\Python\Windy_sBpm_Floating\source\XCategory\Application\SFUpdater\SFUpdater_defs.h",30  Remark[Pe082]: 
          storage class is not first

  PACKED typedef struct
         ^
"C:\Data\Python\Windy_sBpm_Floating\source\XCategory\Application\SFUpdater\SFUpdater.h",35  Remark[Pe082]: 
          storage class is not first
     20          
     21          //-------------------------------------- PUBLIC (Variables) -----------------------------------------------------------
     22          
     23          
     24          //-------------------------------------- PRIVATE (Variables, Constants & Defines) -------------------------------------
     25          
     26          
     27          //-------------------------------------- PRIVATE (Function Prototypes) ------------------------------------------------
     28          
     29          
     30          //=====================================================================================================================
     31          //-------------------------------------- Public Functions -------------------------------------------------------------
     32          //=====================================================================================================================
     33          

   \                                 In section .text, align 2, keep-with-next
     34          void ModeManagement__Handler(void)
     35          {
   \                     ModeManagement__Handler: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
     36          	#if (SYSTEM_MCU_HANDLING == ENABLED)
     37          	// Managing Mode Machine
     38          	if (SettingFile__IsValid() == FALSE)            			// If Setting file is not consistent
   \   00000004   0x.... 0x....      BL       SettingFile__IsValid
   \   00000008   0xB908             CBNZ.N   R0,??ModeManagement__Handler_0
     39          	{
     40          		Mode__SetMode(MODE_SETTINGFILE_NOT_CONSISTENT); 		// force Not consistent state
   \   0000000A   0x2002             MOVS     R0,#+2
   \   0000000C   0xE004             B.N      ??ModeManagement__Handler_1
     41          	}
     42          	else
     43          	{                                               			// If SettingFile is consistent
     44          		if (Mode__GetMode() == MODE_SETTINGFILE_NOT_CONSISTENT) // If the Mode was set to not consistent
   \                     ??ModeManagement__Handler_0: (+1)
   \   0000000E   0x.... 0x....      BL       Mode__GetMode
   \   00000012   0x2802             CMP      R0,#+2
   \   00000014   0xD102             BNE.N    ??ModeManagement__Handler_2
     45          		{
     46          			Mode__SetMode(MODE_NORMAL);             			// force Normal mode
   \   00000016   0x2000             MOVS     R0,#+0
   \                     ??ModeManagement__Handler_1: (+1)
   \   00000018   0x.... 0x....      BL       Mode__SetMode
     47          		}
     48          	}
     49          
     50          	switch (Mode__GetMode())
   \                     ??ModeManagement__Handler_2: (+1)
   \   0000001C   0x.... 0x....      BL       Mode__GetMode
   \   00000020   0x1E40             SUBS     R0,R0,#+1
   \   00000022   0x2801             CMP      R0,#+1
   \   00000024   0xD809             BHI.N    ??ModeManagement__Handler_3
     51          	{
     52          		case MODE_PROGRAMMING:
     53          		case MODE_SETTINGFILE_NOT_CONSISTENT:
     54          			if (SFUpdater__Handler() == TRUE)
   \   00000026   0x.... 0x....      BL       SFUpdater__Handler
   \   0000002A   0x2801             CMP      R0,#+1
   \   0000002C   0xD10B             BNE.N    ??ModeManagement__Handler_4
     55          			{
     56          				SRMicro__ForceReset(MICRO_RESET_MODE_COLD);
   \   0000002E   0xB001             ADD      SP,SP,#+4
   \   00000030   0xF85D 0xEB04      POP      {LR}
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x.... 0x....      B.W      Micro__ForceReset
     57          			}
     58          			break;
     59          
     60          		default:
     61          			Mode__SetMode(MODE_NORMAL);             			// force Normal mode
   \                     ??ModeManagement__Handler_3: (+1)
   \   0000003A   0xB001             ADD      SP,SP,#+4
   \   0000003C   0xF85D 0xEB04      POP      {LR}
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x.... 0x....      B.W      Mode__SetMode
     62          	}
     63          	#endif
     64          }
   \                     ??ModeManagement__Handler_4: (+1)
   \   00000046   0xB001             ADD      SP,SP,#+4
   \   00000048   0xBD00             POP      {PC}             ;; return
     65          //=====================================================================================================================
     66          //-------------------------------------- Private Functions ------------------------------------------------------------
     67          //=====================================================================================================================
     68          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   ModeManagement__Handler
         0   -> Micro__ForceReset
         8   -> Mode__GetMode
         0   -> Mode__SetMode
         8   -> Mode__SetMode
         8   -> SFUpdater__Handler
         8   -> SettingFile__IsValid


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      74  ModeManagement__Handler

 
 74 bytes in section .text
 
 74 bytes of CODE memory

Errors: none
Warnings: none
