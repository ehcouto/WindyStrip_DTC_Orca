###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.5.7591/W32 for ARM        13/Mar/2025  15:31:40
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  XCategory\Driver\Comparator\Comparator.c
#    Command line =  
#        -I./ -I../cx/ -I../cx/inc/ -ICategory/ -ICategory/Application/
#        -ICategory/Application/ApplicationWasherMcu/
#        -ICategory/Application/ApplicationWasherMcu/AnalysisAverage/
#        -ICategory/Application/ApplicationWasherMcu/Arbitration/
#        -ICategory/Application/ApplicationWasherMcu/Motion/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Motion/
#        -ICategory/Application/ApplicationWasherMcu/Motion/MotionError/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Pulse/
#        -ICategory/Application/ApplicationWasherMcu/Motion/RotateXDeg/
#        -ICategory/Application/ApplicationWasherMcu/Motion/SpinDrum/
#        -ICategory/Application/ApplicationWasherMcu/Motion/StopDrum/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Wash/
#        -ICategory/Application/ApplicationWasherMcu/MotorActivity/
#        -ICategory/Application/ApplicationWasherMcu/SpeedMaintain/
#        -ICategory/Application/BandLimiter/ -ICategory/Application/Beagle/
#        -ICategory/Application/CommandManager/
#        -ICategory/Application/DigitalFilter/
#        -ICategory/Application/Extraction/
#        -ICategory/Application/Extraction/CodeGeneration/
#        -ICategory/Application/Extraction/CodeGeneration/SharedUtils/
#        -ICategory/Application/Extraction/Dependencies/
#        -ICategory/Application/FaultManager/
#        -ICategory/Application/MciSensorsWm/ -ICategory/Application/MciSetWm/
#        -ICategory/Application/MciSetWmFloat/ -ICategory/Application/ParamEst/
#        -ICategory/Application/ParamEstExc/ -ICategory/Application/Params/
#        -ICategory/Application/ProtocolInfo/
#        -ICategory/Application/ProtocolMainExternal/
#        -ICategory/Application/SRMotorSafetyInfoParamsMgr_Core/
#        -ICategory/Application/ThermalModel/
#        -ICategory/Application/ThermalModel/ThermalModelCore/
#        -ICategory/Common/ -ICategory/Common/BoardDebugging/
#        -ICategory/Common/MasterCommander/
#        -ICategory/Common/MasterCommander/Source/
#        -ICategory/Common/MasterCommander/Source/HAL/ -ICategory/Hbl/
#        -IProjectSpecific/ -IProjectSpecific/Application/
#        -IProjectSpecific/Application/API007App/
#        -IProjectSpecific/Application/Api221_Filter_Mci_Err/
#        -IProjectSpecific/Application/ModeManagement/
#        -IProjectSpecific/Application/ProductInfo/
#        -IProjectSpecific/Application/RemoteFunctions/
#        -IProjectSpecific/Application/SRMcuSpeedMonitor/
#        -IProjectSpecific/Application/ThermalModel/
#        -IProjectSpecific/CommonCore/ -IProjectSpecific/Driver/
#        -IProjectSpecific/Indesit/ -IProjectSpecific/MasterCommander/
#        -IProjectSpecific/Mci/ -IProjectSpecific/Mci/Mcl/
#        -IProjectSpecific/Mci/Mcl/old_xls/ -IXCategory/
#        -IXCategory/Application/ -IXCategory/Application/MciParametersLoader/
#        -IXCategory/Application/Mode/ -IXCategory/Application/Reveal_APIs/
#        -IXCategory/Application/Reveal_APIs/API003Disc/
#        -IXCategory/Application/Reveal_APIs/API005LowLevel/
#        -IXCategory/Application/Reveal_APIs/API007Data/
#        -IXCategory/Application/Reveal_APIs/API009System/
#        -IXCategory/Application/Reveal_APIs/API010PollVar/
#        -IXCategory/Application/Reveal_APIs/API011AppCtr/
#        -IXCategory/Application/Reveal_APIs/API013RemoteFunction/
#        -IXCategory/Application/Reveal_APIs/API018Diagnostic/
#        -IXCategory/Application/Reveal_APIs/API019ProductInfo/
#        -IXCategory/Application/Reveal_APIs/API220MotorControl/
#        -IXCategory/Application/Reveal_APIs/API220MotorControl/API/
#        -IXCategory/Application/Reveal_APIs/API221MotionCtrl/
#        -IXCategory/Application/Reveal_APIs/SRAPI020Safety/
#        -IXCategory/Application/SFUpdater/ -IXCategory/Common/
#        -IXCategory/Common/Crc16/ -IXCategory/Common/Crc8/
#        -IXCategory/Common/Log/ -IXCategory/Common/SettingFile/
#        -IXCategory/Common/SRClockMonitor/ -IXCategory/Common/SRData/
#        -IXCategory/Common/SRException/ -IXCategory/Common/SRFlow/
#        -IXCategory/Common/SRIsrMonitor/ -IXCategory/Common/SRMain/
#        -IXCategory/Common/SRMcuSpeedMonitor/ -IXCategory/Common/SRPowerMgr/
#        -IXCategory/Common/SRSignature/ -IXCategory/Common/SRSystemConfig/
#        -IXCategory/Common/SRTimerReference/ -IXCategory/Common/SystemConfig/
#        -IXCategory/Common/SystemTimers/ -IXCategory/Common/Utilities/
#        -IXCategory/Driver/ -IXCategory/Driver/API/
#        -IXCategory/Driver/API/Comparator/ -IXCategory/Driver/API/DataFlash/
#        -IXCategory/Driver/API/Dma/ -IXCategory/Driver/API/Flash/
#        -IXCategory/Driver/API/Gpio/ -IXCategory/Driver/API/Micro/
#        -IXCategory/Driver/API/Spi/ -IXCategory/Driver/API/SRMCAtod/
#        -IXCategory/Driver/API/SRMCPwm/ -IXCategory/Driver/API/TimerInterrupt/
#        -IXCategory/Driver/API/Uart/ -IXCategory/Driver/Comparator/
#        -IXCategory/Driver/DataFlash/ -IXCategory/Driver/Dma/
#        -IXCategory/Driver/Flash/ -IXCategory/Driver/Gpio/
#        -IXCategory/Driver/Micro/ -IXCategory/Driver/Spi/
#        -IXCategory/Driver/SRMCAtod/ -IXCategory/Driver/SRMCPwm/
#        -IXCategory/Driver/TimerInterrupt/ -IXCategory/Driver/Uart/
#        -IXCategory/Hbl/ -IXCategory/Hbl/Mci/
#        -IXCategory/Hbl/Mci/InverterTemp/ -IXCategory/Hbl/Mci/Mcl/
#        -IXCategory/Hbl/Mci/Mcl/Braking/ -IXCategory/Hbl/Mci/Mcl/MacroBlocks/
#        -IXCategory/Hbl/Mci/Mcl/MclFvt/ -IXCategory/Hbl/Mci/Mcl/MicroBlocks/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/ClrkPark/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Filters/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Math/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Pi/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/PwmModulation/
#        -IXCategory/Hbl/Mci/Mcl/ResistanceEstimation/
#        -IXCategory/Hbl/Mci/PowerModuleManager/
#        -IXCategory/Hbl/Mci/SpeedRefGen/ -IXCategory/Hbl/Mci/SurgeRelay/
#        -IXCategory/Hbl/SRMotorSafetyMgr/
#        -IXCategory/Hbl/SRMotorSafetyMgr/API/ -IXCategory/Service/
#        -IXCategory/Service/Reveal/ -IXCategory/Service/Win/ --remarks
#        --no_tbaa --debug --use_c++_inline --only_stdout --dlib_config
#        ..\cx\inc\DLib_Config_Normal.h -r -D
#        ENABLE_JUMP_TO_APPLICATION_WITHOUT_IAP_FIRMWARE -D ARM_MATH_CM4 -e
#        --silent --endian=little --cpu Cortex-M4 --fpu=VFPv4_sp -Ohs -o
#        Comparator.obj -l ..\listings\Comparator.lst
#        XCategory\Driver\Comparator\Comparator.c
#    List file    =  ..\listings\Comparator.lst
#    Object file  =  Comparator.obj
#
###############################################################################

C:\Data\Repository\WindyStrip_DTC_Orca\source\XCategory\Driver\Comparator\Comparator.c
      1          /**
      2           *  @file
      3           *
      4           *  @brief      This module handles the Comparator channel
      5           *
      6           *  @details    Detailed description of the file contents
      7           *
      8           *  @section    Applicable_Documents
      9           *					List here all the applicable documents if needed. <tr>
     10           *
     11           *
     12           *  @copyright  Copyright 2016- Whirlpool Corporation. All rights reserved - CONFIDENTIAL
     13           */
     14          //---------------------------------------------------------------------------------------------------------------------
     15          //---------------------------------------------------------------------------------------------------------------------
     16          
     17          
     18          //-------------------------------------- Include Files ----------------------------------------------------------------
     19          #include "C_Extensions.h"
     20          #include "Comparator.h"
     21          #include "uc_MKV3x.h"
     22          #include "SRMicro.h"
     23          #include "Gpio.h"

  extern const volatile GPIO_DEF * GPIO_PORT_LIST[];
  ^
"C:\Data\Repository\WindyStrip_DTC_Orca\source\XCategory\Driver\Gpio\Gpio_macros.h",34  Remark[Pe083]: 
          type qualifier specified more than once

  PACKED typedef struct
         ^
"C:\Data\Repository\WindyStrip_DTC_Orca\source\XCategory\Driver\API\Gpio\Gpio.h",41  Remark[Pe082]: 
          storage class is not first
     24          
     25          //-------------------------------------- PRIVATE (Variables, Constants & Defines) -------------------------------------
     26          
     27          
     28          //-------------------------------------- PRIVATE (Function Prototypes) ------------------------------------------------
     29          
     30          
     31          //=====================================================================================================================
     32          //-------------------------------------- Public Functions -------------------------------------------------------------
     33          //=====================================================================================================================
     34          
     35          //---------------------------------------------------------------------------------------------------------------------
     36          /**
     37           *  @brief      It Initializes the  Comparator module and its variables
     38           *
     39           */

   \                                 In section .text, align 2, keep-with-next
     40          void Comparator__Initialize(void)
     41          {
     42          	SIM.SCGC4 |= SIM_SCGC4_CMP_MASK;		      //Clock Enabled for Comparator module
   \                     Comparator__Initialize: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3  ;; 0x40048034
   \   00000002   0x6801             LDR      R1,[R0, #+0]
   \   00000004   0xF441 0x2100      ORR      R1,R1,#0x80000
   \   00000008   0x6001             STR      R1,[R0, #+0]
     43          }
   \   0000000A   0x4770             BX       LR               ;; return
     44          
     45          //---------------------------------------------------------------------------------------------------------------------
     46          /**
     47           * @brief - This module configures the Comparator channel into desired modes
     48           * @param channel
     49           * @param inverted_input - cmp positive input selection
     50           * @param noninverted_input - cmp negative input selection
     51           * @param mode - comparator modes
     52           * @return
     53           */

   \                                 In section .text, align 4, keep-with-next
     54          PASS_FAIL_TYPE Comparator__Config(COMPARATOR_CHANNEL_DEF channel,COMPARATOR_INVERTED_INPUT_DEF inverted_input,COMPARATOR_NONINVERTED_INPUT_DEF noninverted_input,COMPARATOR_MODE_DEF mode, uint16 cmp_thr)
     55           {
   \                     Comparator__Config: (+1)
   \   00000000   0xB4F0             PUSH     {R4-R7}
     56          	PASS_FAIL_TYPE response;
     57          
     58          	response = FAIL;
   \   00000002   0x2400             MOVS     R4,#+0
     59          	#if (COMPARATOR0_FEATURE == ENABLED)
     60          
     61          		if (channel == COMPARATOR_CHANNEL0)
   \   00000004   0x9D04             LDR      R5,[SP, #+16]
   \   00000006   0x....             LDR.N    R6,??DataTable3_1  ;; 0x40073000
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD14D             BNE.N    ??Comparator__Config_2
     62          		{
     63          		    //For Comparator 0 Decide Output Pin
     64                      #if(COMPARATOR0_REMAP == 0)
     65                          PCIPORTA.PCR[1] = PORT_PCR_MUX(4);              //PTA pin 1 - Comparartor Output CMPOUT0
     66                      #endif
     67          
     68          		#if(COMPARATOR0_REMAP == 1)
     69          			PCIPORTB.PCR[20] = PORT_PCR_MUX(6);				//PTB pin 20 - Comparartor Output CMPOUT0
     70          		#endif
     71          
     72          		#if(COMPARATOR0_REMAP == 2)
     73          			PCIPORTC.PCR[5] = PORT_PCR_MUX(6);				//PTC pin 5 - Comparartor Output CMPOUT0
     74          		#endif
     75          
     76          		if ((inverted_input == COMPARATOR_INVERTED_INPUT7 || noninverted_input == COMPARATOR_NONINVERTED_INPUT7))
   \   0000000C   0x2907             CMP      R1,#+7
   \   0000000E   0xBF18             IT       NE 
   \   00000010   0x2A07             CMPNE    R2,#+7
   \   00000012   0xD10B             BNE.N    ??Comparator__Config_3
     77          		{
     78          			CMP0.DACCR.BIT.DACEN = 1;
   \   00000014   0x7934             LDRB     R4,[R6, #+4]
   \   00000016   0xF044 0x0480      ORR      R4,R4,#0x80
   \   0000001A   0x7134             STRB     R4,[R6, #+4]
     79          			CMP0.DACCR.BIT.VRSEL = CMP0_SUPPLY_REFERENCE_SELECT;
   \   0000001C   0x7934             LDRB     R4,[R6, #+4]
   \   0000001E   0xF044 0x0440      ORR      R4,R4,#0x40
   \   00000022   0x7134             STRB     R4,[R6, #+4]
     80          			CMP0.DACCR.BIT.VOSEL = cmp_thr;
   \   00000024   0x7937             LDRB     R7,[R6, #+4]
   \   00000026   0xF365 0x0705      BFI      R7,R5,#+0,#+6
   \   0000002A   0x7137             STRB     R7,[R6, #+4]
   \                     ??Comparator__Config_3: (+1)
   \   0000002C   0x2B06             CMP      R3,#+6
     81          		}
     82          
     83          			CMP0.MUXCR.BIT.MSEL = inverted_input;				//Configure Plus Input of the comparator
   \   0000002E   0x7974             LDRB     R4,[R6, #+5]
   \   00000030   0xF361 0x0402      BFI      R4,R1,#+0,#+3
   \   00000034   0x7174             STRB     R4,[R6, #+5]
     84          			CMP0.MUXCR.BIT.PSEL = noninverted_input;				//Configure Minus Input of the comparator
   \   00000036   0x7974             LDRB     R4,[R6, #+5]
   \   00000038   0xF362 0x04C5      BFI      R4,R2,#+3,#+3
   \   0000003C   0x7174             STRB     R4,[R6, #+5]
     85          
     86          			switch (mode)
   \   0000003E   0xD82A             BHI.N    ??Comparator__Config_4
   \   00000040   0xE8DF 0xF003      TBB      [PC, R3]
   \                     ??Comparator__Config_0:
   \   00000044   0x04 0x09          DC8      0x4,0x9,0x17,0x17
   \              0x17 0x17    
   \   00000048   0x1B 0x1B          DC8      0x1B,0x1B,0x1B,0x0
   \              0x1B 0x00    
     87          			{
     88          				case COMPARATOR_MODE_DISABLE:
     89          					CMP0.CR1.BIT.EN = 0;
   \                     ??Comparator__Config_5: (+1)
   \   0000004C   0x7874             LDRB     R4,[R6, #+1]
   \   0000004E   0xF004 0x04FE      AND      R4,R4,#0xFE
   \   00000052   0x7074             STRB     R4,[R6, #+1]
     90          					break;
   \   00000054   0xE01F             B.N      ??Comparator__Config_4
     91          
     92          				case COMPARATOR_MODE_CONTINUOUS:
     93          					CMP0.CR1.BIT.WE = 0;
   \                     ??Comparator__Config_6: (+1)
   \   00000056   0x7874             LDRB     R4,[R6, #+1]
   \   00000058   0xF004 0x04BF      AND      R4,R4,#0xBF
   \   0000005C   0x7074             STRB     R4,[R6, #+1]
     94          					CMP0.CR1.BIT.SE = 0;
   \   0000005E   0x7874             LDRB     R4,[R6, #+1]
   \   00000060   0xF004 0x047F      AND      R4,R4,#0x7F
   \   00000064   0x7074             STRB     R4,[R6, #+1]
     95          					CMP0.CR0.BIT.FILTER_CNT = COMPARATOR0_FILTER_CNT;
   \   00000066   0x7834             LDRB     R4,[R6, #+0]
   \   00000068   0xF004 0x048F      AND      R4,R4,#0x8F
   \   0000006C   0x7034             STRB     R4,[R6, #+0]
     96          					if (COMPARATOR0_FILTER_CNT == 0)			//For Mode 2A Continuous Mode
     97          					{
     98          						CMP0.FPR.BYTE = 1;
   \   0000006E   0x2401             MOVS     R4,#+1
   \   00000070   0xE010             B.N      ??Comparator__Config_7
     99          					}
    100          					else								//For Mode 2B Continuous Mode
    101          					{
    102          						CMP0.FPR.BYTE = 0;
    103          					}
    104          
    105          					break;
    106          
    107          				case COMPARATOR_MODE_SAMPLED_NONFILTERED:	//For Mode 3A Sampled Enabled use External Clock
    108          				case COMPARATOR_MODE_SAMPLED_FILTERED:
    109          					CMP0.CR1.BIT.WE = 0;
   \                     ??Comparator__Config_8: (+1)
   \   00000072   0x7874             LDRB     R4,[R6, #+1]
   \   00000074   0xF004 0x04BF      AND      R4,R4,#0xBF
   \   00000078   0xE002             B.N      ??Comparator__Config_9
    110          					CMP0.CR1.BIT.SE = COMPARATOR0_SAMPLE_ENABLED;
    111          					CMP0.CR0.BIT.FILTER_CNT = COMPARATOR0_FILTER_CNT;
    112          					CMP0.FPR.BYTE = COMPARATOR0_FPR;
    113          					break;
    114          
    115          				case COMPARATOR_MODE_WINDOWED:
    116          				case COMPARATOR_MODE_WINDOWED_RESAMPLED:
    117          				case COMPARATOR_MODE_WINDOWED_FILTERED:
    118          					CMP0.CR1.BIT.WE = 1;
   \                     ??Comparator__Config_10: (+1)
   \   0000007A   0x7874             LDRB     R4,[R6, #+1]
   \   0000007C   0xF044 0x0440      ORR      R4,R4,#0x40
   \                     ??Comparator__Config_9: (+1)
   \   00000080   0x7074             STRB     R4,[R6, #+1]
    119          					CMP0.CR1.BIT.SE = COMPARATOR0_SAMPLE_ENABLED;
   \   00000082   0x7874             LDRB     R4,[R6, #+1]
   \   00000084   0xF004 0x047F      AND      R4,R4,#0x7F
   \   00000088   0x7074             STRB     R4,[R6, #+1]
    120          					CMP0.CR0.BIT.FILTER_CNT = COMPARATOR0_FILTER_CNT;
   \   0000008A   0x7834             LDRB     R4,[R6, #+0]
   \   0000008C   0xF004 0x048F      AND      R4,R4,#0x8F
   \   00000090   0x7034             STRB     R4,[R6, #+0]
    121          					CMP0.FPR.BYTE = COMPARATOR0_FPR;
   \   00000092   0x2400             MOVS     R4,#+0
   \                     ??Comparator__Config_7: (+1)
   \   00000094   0x70B4             STRB     R4,[R6, #+2]
    122          					break;
    123          
    124          				default:
    125          					break;
    126          			}
    127          
    128          			CMP0.CR1.BIT.OPE = 1;					//Enable Comparator Output Pin
   \                     ??Comparator__Config_4: (+1)
   \   00000096   0x7874             LDRB     R4,[R6, #+1]
   \   00000098   0xF044 0x0402      ORR      R4,R4,#0x2
   \   0000009C   0x7074             STRB     R4,[R6, #+1]
    129          			CMP0.CR1.BIT.EN = 1;					//Enable Comparator Module
   \   0000009E   0x7874             LDRB     R4,[R6, #+1]
   \   000000A0   0xF044 0x0401      ORR      R4,R4,#0x1
   \   000000A4   0x7074             STRB     R4,[R6, #+1]
    130          			response = PASS;
   \   000000A6   0x2401             MOVS     R4,#+1
    131          
    132          		}
    133          
    134          
    135          	#endif
    136          
    137          	#if(COMPARATOR1_FEATURE == ENABLED)
    138          
    139          		if(channel == COMPARATOR_CHANNEL1)
   \                     ??Comparator__Config_2: (+1)
   \   000000A8   0x2801             CMP      R0,#+1
   \   000000AA   0xD14D             BNE.N    ??Comparator__Config_11
    140          		{
    141          		    //For Comparator 1 Decide Output Pin
    142                      #if(COMPARATOR1_REMAP == 0)
    143                          PCIPORTA.PCR[2] = PORT_PCR_MUX(4);              //PTA pin 2 - Comparartor Output CMPOUT1
    144                      #endif
    145          
    146          		#if(COMPARATOR1_REMAP == 1)
    147          			PCIPORTB.PCR[21] = PORT_PCR_MUX(6);				//PTB pin 21 - Comparartor Output CMPOUT1
    148          		#endif
    149          
    150          		#if(COMPARATOR1_REMAP == 2)
    151          			PCIPORTC.PCR[4] = PORT_PCR_MUX(6);				//PTC pin 4 - Comparartor Output CMPOUT1
    152          		#endif
    153          
    154          		if((inverted_input == COMPARATOR_INVERTED_INPUT7 || noninverted_input == COMPARATOR_NONINVERTED_INPUT7))
   \   000000AC   0x2907             CMP      R1,#+7
   \   000000AE   0xBF18             IT       NE 
   \   000000B0   0x2A07             CMPNE    R2,#+7
   \   000000B2   0xD10B             BNE.N    ??Comparator__Config_12
    155          		{
    156          			CMP1.DACCR.BIT.DACEN = 1;
   \   000000B4   0x7B30             LDRB     R0,[R6, #+12]
   \   000000B6   0xF040 0x0080      ORR      R0,R0,#0x80
   \   000000BA   0x7330             STRB     R0,[R6, #+12]
    157          			CMP1.DACCR.BIT.VRSEL = CMP1_SUPPLY_REFERENCE_SELECT;
   \   000000BC   0x7B30             LDRB     R0,[R6, #+12]
   \   000000BE   0xF040 0x0040      ORR      R0,R0,#0x40
   \   000000C2   0x7330             STRB     R0,[R6, #+12]
    158          			CMP1.DACCR.BIT.VOSEL= cmp_thr;
   \   000000C4   0x7B30             LDRB     R0,[R6, #+12]
   \   000000C6   0xF365 0x0005      BFI      R0,R5,#+0,#+6
   \   000000CA   0x7330             STRB     R0,[R6, #+12]
   \                     ??Comparator__Config_12: (+1)
   \   000000CC   0x2B06             CMP      R3,#+6
    159          		}
    160          
    161          			CMP1.MUXCR.BIT.MSEL = inverted_input;				//Configure Plus Input of the comparator
   \   000000CE   0x7B70             LDRB     R0,[R6, #+13]
   \   000000D0   0xF361 0x0002      BFI      R0,R1,#+0,#+3
   \   000000D4   0x7370             STRB     R0,[R6, #+13]
    162          			CMP1.MUXCR.BIT.PSEL = noninverted_input;				//Configure Minus Input of the comparator
   \   000000D6   0x7B70             LDRB     R0,[R6, #+13]
   \   000000D8   0xF362 0x00C5      BFI      R0,R2,#+3,#+3
   \   000000DC   0x7370             STRB     R0,[R6, #+13]
    163          
    164          			switch (mode)
   \   000000DE   0xD82A             BHI.N    ??Comparator__Config_13
   \   000000E0   0xE8DF 0xF003      TBB      [PC, R3]
   \                     ??Comparator__Config_1:
   \   000000E4   0x04 0x09          DC8      0x4,0x9,0x17,0x17
   \              0x17 0x17    
   \   000000E8   0x1B 0x1B          DC8      0x1B,0x1B,0x1B,0x0
   \              0x1B 0x00    
    165          			{
    166          				case COMPARATOR_MODE_DISABLE:
    167          					CMP1.CR1.BIT.EN = 0;
   \                     ??Comparator__Config_14: (+1)
   \   000000EC   0x7A70             LDRB     R0,[R6, #+9]
   \   000000EE   0xF000 0x00FE      AND      R0,R0,#0xFE
   \   000000F2   0x7270             STRB     R0,[R6, #+9]
    168          					break;
   \   000000F4   0xE01F             B.N      ??Comparator__Config_13
    169          
    170          				case COMPARATOR_MODE_CONTINUOUS:
    171          					CMP1.CR1.BIT.WE = 0;
   \                     ??Comparator__Config_15: (+1)
   \   000000F6   0x7A70             LDRB     R0,[R6, #+9]
   \   000000F8   0xF000 0x00BF      AND      R0,R0,#0xBF
   \   000000FC   0x7270             STRB     R0,[R6, #+9]
    172          					CMP1.CR1.BIT.SE = 0;
   \   000000FE   0x7A70             LDRB     R0,[R6, #+9]
   \   00000100   0xF000 0x007F      AND      R0,R0,#0x7F
   \   00000104   0x7270             STRB     R0,[R6, #+9]
    173          					CMP1.CR0.BIT.FILTER_CNT = COMPARATOR1_FILTER_CNT;
   \   00000106   0x7A30             LDRB     R0,[R6, #+8]
   \   00000108   0xF000 0x008F      AND      R0,R0,#0x8F
   \   0000010C   0x7230             STRB     R0,[R6, #+8]
    174          					if (COMPARATOR1_FILTER_CNT == 0)			//For Mode 2A Continuous Mode
    175          					{
    176          						CMP1.FPR.BYTE = 1;
   \   0000010E   0x2001             MOVS     R0,#+1
   \   00000110   0xE010             B.N      ??Comparator__Config_16
    177          					}
    178          					else								//For Mode 2B Continuous Mode
    179          					{
    180          						CMP1.FPR.BYTE = 0;
    181          					}
    182          
    183          					break;
    184          
    185          				case COMPARATOR_MODE_SAMPLED_NONFILTERED:	//For Mode 3A Sampled Enabled use External Clock
    186          				case COMPARATOR_MODE_SAMPLED_FILTERED:
    187          					CMP1.CR1.BIT.WE = 0;
   \                     ??Comparator__Config_17: (+1)
   \   00000112   0x7A70             LDRB     R0,[R6, #+9]
   \   00000114   0xF000 0x00BF      AND      R0,R0,#0xBF
   \   00000118   0xE002             B.N      ??Comparator__Config_18
    188          					CMP1.CR1.BIT.SE = COMPARATOR1_SAMPLE_ENABLED;
    189          					CMP1.CR0.BIT.FILTER_CNT = COMPARATOR1_FILTER_CNT;
    190          					CMP1.FPR.BYTE = COMPARATOR1_FPR;
    191          					break;
    192          
    193          				case COMPARATOR_MODE_WINDOWED:
    194          				case COMPARATOR_MODE_WINDOWED_RESAMPLED:
    195          				case COMPARATOR_MODE_WINDOWED_FILTERED:
    196          					CMP1.CR1.BIT.WE = 1;
   \                     ??Comparator__Config_19: (+1)
   \   0000011A   0x7A70             LDRB     R0,[R6, #+9]
   \   0000011C   0xF040 0x0040      ORR      R0,R0,#0x40
   \                     ??Comparator__Config_18: (+1)
   \   00000120   0x7270             STRB     R0,[R6, #+9]
    197          					CMP1.CR1.BIT.SE = COMPARATOR1_SAMPLE_ENABLED;
   \   00000122   0x7A70             LDRB     R0,[R6, #+9]
   \   00000124   0xF000 0x007F      AND      R0,R0,#0x7F
   \   00000128   0x7270             STRB     R0,[R6, #+9]
    198          					CMP1.CR0.BIT.FILTER_CNT = COMPARATOR1_FILTER_CNT;
   \   0000012A   0x7A30             LDRB     R0,[R6, #+8]
   \   0000012C   0xF000 0x008F      AND      R0,R0,#0x8F
   \   00000130   0x7230             STRB     R0,[R6, #+8]
    199          					CMP1.FPR.BYTE = COMPARATOR1_FPR;
   \   00000132   0x2000             MOVS     R0,#+0
   \                     ??Comparator__Config_16: (+1)
   \   00000134   0x72B0             STRB     R0,[R6, #+10]
    200          					break;
    201          
    202          				default:
    203          					break;
    204          
    205          			}
    206          
    207          			CMP1.CR1.BIT.OPE = 1;					//Enable Comparator Output Pin
   \                     ??Comparator__Config_13: (+1)
   \   00000136   0x7A70             LDRB     R0,[R6, #+9]
   \   00000138   0xF040 0x0002      ORR      R0,R0,#0x2
   \   0000013C   0x7270             STRB     R0,[R6, #+9]
   \   0000013E   0x2401             MOVS     R4,#+1
    208          			CMP1.CR1.BIT.EN = 1;					//Enable Comparator Module
   \   00000140   0x7A70             LDRB     R0,[R6, #+9]
   \   00000142   0xF040 0x0001      ORR      R0,R0,#0x1
   \   00000146   0x7270             STRB     R0,[R6, #+9]
    209          			response = PASS;
    210          
    211          
    212          		}
    213          	#endif
    214          
    215          return (response);
   \                     ??Comparator__Config_11: (+1)
   \   00000148   0x4620             MOV      R0,R4
   \   0000014A   0xBCF0             POP      {R4-R7}
   \   0000014C   0x4770             BX       LR               ;; return
    216          }
    217          
    218          //-----------------------------------------------------------------------------------------------------------
    219          /*
    220           *
    221           * @brief This method used for checking the comparator channel output status
    222           * @param: channel
    223           * @return: status of comparator
    224           *
    225           */

   \                                 In section .text, align 2, keep-with-next
    226          uint8 Comparator__GetStatus(COMPARATOR_CHANNEL_DEF channel)
    227          {
    228          	uint8 status;
    229          	status = 0;
   \                     Comparator__GetStatus: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
    230          	if (channel == COMPARATOR_CHANNEL0)
   \   00000002   0xB928             CBNZ.N   R0,??Comparator__GetStatus_0
    231          	{
    232          		if (CMP0.SCR.BIT.COUT == 1)
   \   00000004   0x....             LDR.N    R0,??DataTable3_2  ;; 0x40073003
   \   00000006   0x7802             LDRB     R2,[R0, #+0]
   \   00000008   0x07D2             LSLS     R2,R2,#+31
   \   0000000A   0xD50A             BPL.N    ??Comparator__GetStatus_1
    233          		{
    234          			status = CMP0.SCR.BIT.COUT;
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0xE006             B.N      ??Comparator__GetStatus_2
    235          		}
    236          	}
    237          
    238          	else if (channel == COMPARATOR_CHANNEL1)
   \                     ??Comparator__GetStatus_0: (+1)
   \   00000010   0x2801             CMP      R0,#+1
   \   00000012   0xD106             BNE.N    ??Comparator__GetStatus_1
    239          	{
    240          		if (CMP1.SCR.BIT.COUT == 1)
   \   00000014   0x....             LDR.N    R0,??DataTable3_2  ;; 0x40073003
   \   00000016   0x7A02             LDRB     R2,[R0, #+8]
   \   00000018   0x07D2             LSLS     R2,R2,#+31
   \   0000001A   0xD502             BPL.N    ??Comparator__GetStatus_1
    241          		{
    242          			status = CMP1.SCR.BIT.COUT;
   \   0000001C   0x7A00             LDRB     R0,[R0, #+8]
   \                     ??Comparator__GetStatus_2: (+1)
   \   0000001E   0xF000 0x0101      AND      R1,R0,#0x1
    243          		}
    244          	}
    245          	return (status);
   \                     ??Comparator__GetStatus_1: (+1)
   \   00000022   0x4608             MOV      R0,R1
   \   00000024   0x4770             BX       LR               ;; return
    246          }
    247          
    248          
    249          //-----------------------------------------------------------------------------------------------------------
    250          /*
    251           *
    252           * @brief This method used to set the comparator threshold
    253           * @param: channel
    254           * @return: status of comparator
    255           *
    256           */

   \                                 In section .text, align 2, keep-with-next
    257          void Comparator__SetThr(COMPARATOR_CHANNEL_DEF channel, uint16 cmp_thr)
    258          {
    259          
    260          	if (channel == COMPARATOR_CHANNEL0)
   \                     Comparator__SetThr: (+1)
   \   00000000   0xB928             CBNZ.N   R0,??Comparator__SetThr_0
    261          	{
    262          		CMP0.DACCR.BIT.VOSEL = cmp_thr;
   \   00000002   0x....             LDR.N    R0,??DataTable3_3  ;; 0x40073004
   \   00000004   0x7802             LDRB     R2,[R0, #+0]
   \   00000006   0xF361 0x0205      BFI      R2,R1,#+0,#+6
   \   0000000A   0x7002             STRB     R2,[R0, #+0]
   \   0000000C   0x4770             BX       LR
    263          	}
    264          
    265          	else if (channel == COMPARATOR_CHANNEL1)
   \                     ??Comparator__SetThr_0: (+1)
   \   0000000E   0x2801             CMP      R0,#+1
   \   00000010   0xD104             BNE.N    ??Comparator__SetThr_1
    266          	{
    267          		CMP1.DACCR.BIT.VOSEL = cmp_thr;
   \   00000012   0x....             LDR.N    R0,??DataTable3_3  ;; 0x40073004
   \   00000014   0x7A02             LDRB     R2,[R0, #+8]
   \   00000016   0xF361 0x0205      BFI      R2,R1,#+0,#+6
   \   0000001A   0x7202             STRB     R2,[R0, #+8]
    268          	}
    269          }
   \                     ??Comparator__SetThr_1: (+1)
   \   0000001C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x40048034         DC32     0x40048034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x40073000         DC32     0x40073000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x40073003         DC32     0x40073003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x40073004         DC32     0x40073004
    270          
    271          //=====================================================================================================================
    272          //-------------------------------------- Private Functions ------------------------------------------------------------
    273          //=====================================================================================================================

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   Comparator__Config
       0   Comparator__GetStatus
       0   Comparator__Initialize
       0   Comparator__SetThr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
     334  Comparator__Config
      38  Comparator__GetStatus
      12  Comparator__Initialize
      30  Comparator__SetThr

 
 430 bytes in section .text
 
 430 bytes of CODE memory

Errors: none
Warnings: none
