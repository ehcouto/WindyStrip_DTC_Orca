###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.5.7591/W32 for ARM        19/Nov/2024  13:15:35
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        ProjectSpecific\Application\RemoteFunctions\RemoteFunctionChildSafety.c
#    Command line =  
#        -I./ -I../cx/ -I../cx/inc/ -ICategory/ -ICategory/Application/
#        -ICategory/Application/ApplicationWasherMcu/
#        -ICategory/Application/ApplicationWasherMcu/AnalysisAverage/
#        -ICategory/Application/ApplicationWasherMcu/Arbitration/
#        -ICategory/Application/ApplicationWasherMcu/Motion/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Motion/
#        -ICategory/Application/ApplicationWasherMcu/Motion/MotionError/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Pulse/
#        -ICategory/Application/ApplicationWasherMcu/Motion/RotateXDeg/
#        -ICategory/Application/ApplicationWasherMcu/Motion/SpinDrum/
#        -ICategory/Application/ApplicationWasherMcu/Motion/StopDrum/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Wash/
#        -ICategory/Application/ApplicationWasherMcu/MotorActivity/
#        -ICategory/Application/ApplicationWasherMcu/SpeedMaintain/
#        -ICategory/Application/BandLimiter/ -ICategory/Application/Beagle/
#        -ICategory/Application/CommandManager/
#        -ICategory/Application/DigitalFilter/
#        -ICategory/Application/Extraction/
#        -ICategory/Application/Extraction/CodeGeneration/
#        -ICategory/Application/Extraction/CodeGeneration/SharedUtils/
#        -ICategory/Application/Extraction/Dependencies/
#        -ICategory/Application/FaultManager/
#        -ICategory/Application/MciSensorsWm/ -ICategory/Application/MciSetWm/
#        -ICategory/Application/MciSetWmFloat/ -ICategory/Application/ParamEst/
#        -ICategory/Application/ParamEstExc/ -ICategory/Application/Params/
#        -ICategory/Application/ProtocolInfo/
#        -ICategory/Application/ProtocolMainExternal/
#        -ICategory/Application/SRMotorSafetyInfoParamsMgr_Core/
#        -ICategory/Application/ThermalModel/
#        -ICategory/Application/ThermalModel/ThermalModelCore/
#        -ICategory/Common/ -ICategory/Common/BoardDebugging/
#        -ICategory/Common/MasterCommander/
#        -ICategory/Common/MasterCommander/Source/
#        -ICategory/Common/MasterCommander/Source/HAL/ -ICategory/Hbl/
#        -IProjectSpecific/ -IProjectSpecific/Application/
#        -IProjectSpecific/Application/API007App/
#        -IProjectSpecific/Application/Api221_Filter_Mci_Err/
#        -IProjectSpecific/Application/ModeManagement/
#        -IProjectSpecific/Application/ProductInfo/
#        -IProjectSpecific/Application/RemoteFunctions/
#        -IProjectSpecific/Application/SRMcuSpeedMonitor/
#        -IProjectSpecific/Application/ThermalModel/
#        -IProjectSpecific/CommonCore/ -IProjectSpecific/Driver/
#        -IProjectSpecific/Indesit/ -IProjectSpecific/MasterCommander/
#        -IProjectSpecific/Mci/ -IProjectSpecific/Mci/Mcl/
#        -IProjectSpecific/Mci/Mcl/old_xls/ -IXCategory/
#        -IXCategory/Application/ -IXCategory/Application/MciParametersLoader/
#        -IXCategory/Application/Mode/ -IXCategory/Application/Reveal_APIs/
#        -IXCategory/Application/Reveal_APIs/API003Disc/
#        -IXCategory/Application/Reveal_APIs/API005LowLevel/
#        -IXCategory/Application/Reveal_APIs/API007Data/
#        -IXCategory/Application/Reveal_APIs/API009System/
#        -IXCategory/Application/Reveal_APIs/API010PollVar/
#        -IXCategory/Application/Reveal_APIs/API011AppCtr/
#        -IXCategory/Application/Reveal_APIs/API013RemoteFunction/
#        -IXCategory/Application/Reveal_APIs/API018Diagnostic/
#        -IXCategory/Application/Reveal_APIs/API019ProductInfo/
#        -IXCategory/Application/Reveal_APIs/API220MotorControl/
#        -IXCategory/Application/Reveal_APIs/API220MotorControl/API/
#        -IXCategory/Application/Reveal_APIs/API221MotionCtrl/
#        -IXCategory/Application/Reveal_APIs/SRAPI020Safety/
#        -IXCategory/Application/SFUpdater/ -IXCategory/Common/
#        -IXCategory/Common/Crc16/ -IXCategory/Common/Crc8/
#        -IXCategory/Common/Log/ -IXCategory/Common/SettingFile/
#        -IXCategory/Common/SRClockMonitor/ -IXCategory/Common/SRData/
#        -IXCategory/Common/SRException/ -IXCategory/Common/SRFlow/
#        -IXCategory/Common/SRIsrMonitor/ -IXCategory/Common/SRMain/
#        -IXCategory/Common/SRMcuSpeedMonitor/ -IXCategory/Common/SRPowerMgr/
#        -IXCategory/Common/SRSignature/ -IXCategory/Common/SRSystemConfig/
#        -IXCategory/Common/SRTimerReference/ -IXCategory/Common/SystemConfig/
#        -IXCategory/Common/SystemTimers/ -IXCategory/Common/Utilities/
#        -IXCategory/Driver/ -IXCategory/Driver/API/
#        -IXCategory/Driver/API/Comparator/ -IXCategory/Driver/API/DataFlash/
#        -IXCategory/Driver/API/Dma/ -IXCategory/Driver/API/Flash/
#        -IXCategory/Driver/API/Gpio/ -IXCategory/Driver/API/Micro/
#        -IXCategory/Driver/API/Spi/ -IXCategory/Driver/API/SRMCAtod/
#        -IXCategory/Driver/API/SRMCPwm/ -IXCategory/Driver/API/TimerInterrupt/
#        -IXCategory/Driver/API/Uart/ -IXCategory/Driver/Comparator/
#        -IXCategory/Driver/DataFlash/ -IXCategory/Driver/Dma/
#        -IXCategory/Driver/Flash/ -IXCategory/Driver/Gpio/
#        -IXCategory/Driver/Micro/ -IXCategory/Driver/Spi/
#        -IXCategory/Driver/SRMCAtod/ -IXCategory/Driver/SRMCPwm/
#        -IXCategory/Driver/TimerInterrupt/ -IXCategory/Driver/Uart/
#        -IXCategory/Hbl/ -IXCategory/Hbl/Mci/
#        -IXCategory/Hbl/Mci/InverterTemp/ -IXCategory/Hbl/Mci/Mcl/
#        -IXCategory/Hbl/Mci/Mcl/Braking/ -IXCategory/Hbl/Mci/Mcl/MacroBlocks/
#        -IXCategory/Hbl/Mci/Mcl/MclFvt/ -IXCategory/Hbl/Mci/Mcl/MicroBlocks/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/ClrkPark/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Filters/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Math/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Pi/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/PwmModulation/
#        -IXCategory/Hbl/Mci/Mcl/ResistanceEstimation/
#        -IXCategory/Hbl/Mci/PowerModuleManager/
#        -IXCategory/Hbl/Mci/SpeedRefGen/ -IXCategory/Hbl/Mci/SurgeRelay/
#        -IXCategory/Hbl/SRMotorSafetyMgr/
#        -IXCategory/Hbl/SRMotorSafetyMgr/API/ -IXCategory/Service/
#        -IXCategory/Service/Reveal/ -IXCategory/Service/Win/ --remarks
#        --no_tbaa --debug --use_c++_inline --only_stdout --dlib_config
#        ..\cx\inc\DLib_Config_Normal.h -r -D
#        ENABLE_JUMP_TO_APPLICATION_WITHOUT_IAP_FIRMWARE -D ARM_MATH_CM4 -e
#        --silent --endian=little --cpu Cortex-M4 --fpu=VFPv4_sp -Ohs -o
#        RemoteFunctionChildSafety.obj -l
#        ..\listings\RemoteFunctionChildSafety.lst
#        ProjectSpecific\Application\RemoteFunctions\RemoteFunctionChildSafety.c
#    List file    =  ..\listings\RemoteFunctionChildSafety.lst
#    Object file  =  RemoteFunctionChildSafety.obj
#
###############################################################################

C:\Data\Python\Windy_sBpm_Floating\source\ProjectSpecific\Application\RemoteFunctions\RemoteFunctionChildSafety.c
      1          /**
      2           * @file
      3           * @brief       Implements an AP013 Remote Function server to interface with this remote function.
      4           *
      5           * @details
      6           *
      7           *      This module implements the Remote Function code for the standard API013 server interface.
      8           *
      9           *      A features:
     10           *          - Implements the four standard functions for Remote Functions.
     11           *          - A Background function that runs while the Remote Function is enabled.
     12           *          - A DoCommand handler to accept commands from the client.
     13           *          - A GetData handler to publish requested calculated results.
     14           *          - A GetStatus handler to report status if requested by client or pushed by server.
     15           *
     16           * @copyright   Copyright 2017 Whirlpool Corporation.  All rights reserved - CONFIDENTIAL.
     17           */
     18          
     19          //  --- Include Files -------------------------------------------------------------------------------------------------
     20          // -- This Module --
     21          #include "C_Extensions.h"
     22          #include "RemoteFunctionChildSafety.h"
     23          // -- Other Modules --
     24          #include <math.h>
     25          #include "Mci.h"
     26          #include "API013RemoteFunction.h"
     27          #include "Motion.h"
     28          #include "RemoteFunctionInterface.h"
     29          #include "SettingFile.h"

  PACKED typedef struct
         ^
"C:\Data\Python\Windy_sBpm_Floating\source\XCategory\Common\SettingFile\SettingFile.h",39  Remark[Pe082]: 
          storage class is not first
     30          #include <string.h>
     31          #include "SystemConfig.h"
     32          #include "SystemTimers.h"

  PACKED typedef struct
         ^
"C:\Data\Python\Windy_sBpm_Floating\source\XCategory\Common\SystemTimers\SystemTimers.h",45  Remark[Pe082]: 
          storage class is not first

  PACKED typedef struct
         ^
"C:\Data\Python\Windy_sBpm_Floating\source\XCategory\Common\SystemTimers\SystemTimers.h",56  Remark[Pe082]: 
          storage class is not first
     33          #include "MciSensorsWm.h"
     34          
     35          //  --- Private Declarations ------------------------------------------------------------------------------------------
     36          
     37          
     38          // -- Private Constant Declarations --
     39          #define CS_ACCEL_TO_LOWERS_ON                       32767   //!< [rpm/s] acceleration to make mci push lowers on after hitting the drum target angle
     40          
     41          
     42          // -- Private Enumerated Constant Declarations --
     43          
     44          //! Child safety status enumerator
     45          typedef enum
     46          {
     47              CHILD_SAFETY_ROUTINE_STATUS_IDLE = 0,
     48              CHILD_SAFETY_ROUTINE_STATUS_PROCESSING,
     49              CHILD_SAFETY_ROUTINE_STATUS_DONE,
     50              CHILD_SAFETY_ROUTINE_STATUS_STARTED,
     51              CHILD_SAFETY_ROUTINE_STATUS_RESUMED,
     52              CHILD_SAFETY_ROUTINE_STATUS_PAUSED,
     53              CHILD_SAFETY_ROUTINE_STATUS_INVALID
     54          } CHILD_SAFETY_ROUTINE_STATUS_TYPE;
     55          
     56          
     57          
     58          //! Child safety error declaration
     59          typedef enum
     60          {
     61              CHILD_SAFETY_ROUTINE_ERROR_NONE,                //!< No error was found
     62              CHILD_SAFETY_ROUTINE_ERROR_SETTING_FILE,        //!< Error found during parameters loading
     63              CHILD_SAFETY_ROUTINE_ERROR_TIMEOUT,             //!< Timeout elapsed
     64              CHILD_SAFETY_ROUTINE_ERROR_FOUND,               //!< An error not listed above, e.g., mci error
     65          } CHILD_SAFETY_ROUTINE_ERROR_TYPE;
     66          
     67          
     68          
     69          //! Child safety phase enumerator
     70          typedef enum
     71          {
     72              CHILD_SAFETY_ROUTINE_PHASE_NOT_DEFINED = 0,     //!< 0 - Not defined - it shall not be used
     73              CHILD_SAFETY_ROUTINE_PHASE_IDLE,                //!< 1 - Idle
     74              CHILD_SAFETY_ROUTINE_PHASE_INIT,                //!< 2 - Initialize (called once) all variables
     75              CHILD_SAFETY_ROUTINE_PHASE_WAIT_MCI_IDLE,       //!< 3 - Waiting for mci get into idle
     76              CHILD_SAFETY_ROUTINE_PHASE_ROTATING_X_DEG,      //!< 4 - Rotate drum by x degree according to settings file
     77              CHILD_SAFETY_ROUTINE_PHASE_PAUSE_TIME,          //!< 5 - Pause time after rotating x degree
     78              CHILD_SAFETY_ROUTINE_PHASE_END                  //!< 6 - Child safety movement performed
     79          } CHILD_SAFETY_ROUTINE_PHASE_TYPE;
     80          
     81          
     82          
     83          // -- Private Type Declarations --
     84          typedef struct
     85          {
     86             uint8 	Enable 			:1;                     //!< Child safety is enabled from settings file
     87             uint8 	not_used 		:7;                     //!< Not used
     88             uint8 	Acceleration_1;                         //!< [rpm/s] Acceleration_1
     89             uint8 	Acceleration_2;                         //!< Not used
     90             uint8 	Taget_Speed;                            //!< [rpm] target speed to command mci while moving
     91             uint8 	Child_Pause_Time;                       //!< [s] pause time after drum rotating a little bit
     92             uint8 	Timeout;                                //!< [s] timeout to perform whole algorithm
     93             uint8 	Subcycle_Priority;                      //!< Not used in MCU
     94             uint8 	Drum_Angle;                             //!< [degree] drum angle target - used to rotate drum
     95          } CHILD_SAFETY_PARAMS_TYPE;
     96          
     97          //! Child safety variables structure
     98          typedef struct
     99          {
    100             CHILD_SAFETY_ROUTINE_STATUS_TYPE Routine_Status  :3;
    101             CHILD_SAFETY_ROUTINE_PHASE_TYPE Routine_Phase    :3;
    102             CHILD_SAFETY_ROUTINE_ERROR_TYPE Routine_Error    :2;
    103          } CHILD_SAFETY_ROUTINE_TYPE;
    104          
    105          
    106          //! Child safety parameters - calculated from what GESE sent
    107          typedef struct
    108          {
    109              sint32 target_rpm;
    110              sint32 target_accel;
    111              sint32 target_deg;
    112              uint32 pause_after_run_sec;
    113              uint32 timeout;
    114          } CHILD_SAFETY_PARAMETERS_TYPE;
    115          
    116          
    117          // -- Private Variable Definitions --

   \                                 In section .bss, align 4
   \   00000000                      DS8 4
    118          static CHILD_SAFETY_PARAMS_TYPE *Child_Safety_Params;   //!< A point settings file
    119          static CHILD_SAFETY_ROUTINE_TYPE Child_Safety_Status;   //!< Declare status structure
    120          static uint16 Child_Safety_Timeout_Handler;             //!< Overall timeout handler
    121          static uint16 Child_Safety_Wait_Timer_Handler;          //!< Wait timer after running
    122          static CHILD_SAFETY_PARAMETERS_TYPE CS_Params;          //!< define the data used in the algorithm
    123          
    124          // Move this defines to GESE
    125          #define CS_SPEED_2_DRUM_POS_BELT_RATIO  1.0f            //! Define the belt ratio between motor and drum shafts.
    126          
    127          // Local definition to use precompiler
    128          #define CS_SPEED_SHIFT                  10              //! Define the speed resolution before integrating speed to calculate position
    129          #define CS_SPEED_2_DRUM_POS_CALL_RATE   (25.0f/1000.0f)
    130          #define CS_ANGLE_THRESHOLD_INT(angle)     ((angle)/(((CS_SPEED_2_DRUM_POS_CALL_RATE/CS_SPEED_2_DRUM_POS_BELT_RATIO)*(180.0f/30.0f))/(1<<(16-CS_SPEED_SHIFT))))
    131          
    132          
    133          //  --- Private Function Prototypes -----------------------------------------------------------------------------------
    134          
    135          static void sendStatusData (uint8 server_function_index_local);
    136          
    137          //=====================================================================================================================
    138          //  --- Public Functions ----------------------------------------------------------------------------------------------
    139          //=====================================================================================================================
    140          
    141          //---------------------------------------------------------------------------------------------------------------------
    142          /**
    143           * Initialize all module variables.
    144           */

   \                                 In section .text, align 4, keep-with-next
    145          void RemoteFunctionChildSafety__Initialize(void)
    146          {
   \                     RemoteFunctionChildSafety__Initialize: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    147              SETTINGFILE_LOADER_TYPE loader;
    148          
    149              // zero the status
    150              memset(&Child_Safety_Status, 0, sizeof(Child_Safety_Status));
   \   00000002   0x....             LDR.N    R4,??DataTable3_1
   \   00000004   0xB082             SUB      SP,SP,#+8
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0xF104 0x0018      ADD      R0,R4,#+24
   \   0000000C   0x.... 0x....      BL       __aeabi_memclr4
    151          
    152              // Get timer handle for certain functionalities
    153              Child_Safety_Timeout_Handler = SystemTimers__GetHandle(SYSTEMTIMERS_TYPE_DOWN_COUNTER);
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       SystemTimers__GetHandle
   \   00000016   0x82A0             STRH     R0,[R4, #+20]
    154              Child_Safety_Wait_Timer_Handler = SystemTimers__GetHandle(SYSTEMTIMERS_TYPE_DOWN_COUNTER);
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       SystemTimers__GetHandle
    155          
    156              // Read settings file and load data to the internal variables, if all timer handlers have been allocated properly
    157              if(((Child_Safety_Timeout_Handler != SYSTEMTIMERS_FAIL) &&
    158                  (Child_Safety_Wait_Timer_Handler != SYSTEMTIMERS_FAIL)) &&
    159                  (SettingFile__IsValid() == TRUE) &&
    160              	(SettingFile__BasicLoader(SF_PTR_MCU_MOTOR_APPLICATION_GENERIC_DATA, SF_DISPL_REMOTE_FUNCTION_CHILDSAFETY_PARAMS, &loader) == PASS))
   \   0000001E   0x8AA2             LDRH     R2,[R4, #+20]
   \   00000020   0x82E0             STRH     R0,[R4, #+22]
   \   00000022   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000026   0x428A             CMP      R2,R1
   \   00000028   0xBF18             IT       NE 
   \   0000002A   0x4288             CMPNE    R0,R1
   \   0000002C   0xD027             BEQ.N    ??RemoteFunctionChildSafety__Initialize_0
   \   0000002E   0x.... 0x....      BL       SettingFile__IsValid
   \   00000032   0x2801             CMP      R0,#+1
   \   00000034   0xD123             BNE.N    ??RemoteFunctionChildSafety__Initialize_0
   \   00000036   0xAA00             ADD      R2,SP,#+0
   \   00000038   0x2101             MOVS     R1,#+1
   \   0000003A   0xF240 0x2007      MOVW     R0,#+519
   \   0000003E   0x.... 0x....      BL       SettingFile__BasicLoader
   \   00000042   0x2801             CMP      R0,#+1
   \   00000044   0xD11B             BNE.N    ??RemoteFunctionChildSafety__Initialize_0
    161              {
    162                  Child_Safety_Params = (CHILD_SAFETY_PARAMS_TYPE *)loader.Data;	//loader.Data;	//lint !e927 Suppress Info: cast from pointer to pointer [MISRA 2004 Rule 11.4]
   \   00000046   0x9800             LDR      R0,[SP, #+0]
    163          
    164                  CS_Params.target_rpm = Child_Safety_Params->Taget_Speed;
   \   00000048   0x78C1             LDRB     R1,[R0, #+3]
   \   0000004A   0x6021             STR      R1,[R4, #+0]
    165                  CS_Params.target_accel = Child_Safety_Params->Acceleration_1;
    166          
    167                  CS_Params.target_deg = (sint32)CS_ANGLE_THRESHOLD_INT((float)Child_Safety_Params->Drum_Angle);
   \   0000004C   0xEDDF 0x....      VLDR.W   S1,??DataTable3  ;; 0x3b19999a
   \   00000050   0x7841             LDRB     R1,[R0, #+1]
   \   00000052   0x6061             STR      R1,[R4, #+4]
   \   00000054   0x79C1             LDRB     R1,[R0, #+7]
   \   00000056   0xEE00 0x1A10      VMOV     S0,R1
   \   0000005A   0xEEB8 0x0A40      VCVT.F32.U32 S0,S0
   \   0000005E   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   00000062   0xEEBD 0x0AC0      VCVT.S32.F32 S0,S0
   \   00000066   0xED84 0x0A02      VSTR     S0,[R4, #+8]
    168                  CS_Params.pause_after_run_sec = Child_Safety_Params->Child_Pause_Time;
   \   0000006A   0x7901             LDRB     R1,[R0, #+4]
   \   0000006C   0x60E1             STR      R1,[R4, #+12]
    169                  CS_Params.timeout = Child_Safety_Params->Timeout;
   \   0000006E   0x7940             LDRB     R0,[R0, #+5]
   \   00000070   0x6120             STR      R0,[R4, #+16]
    170          
    171                  Child_Safety_Status.Routine_Error = CHILD_SAFETY_ROUTINE_ERROR_NONE;
    172              }
    173              else
    174              {
    175                  // Keep track of SF error
    176                  Child_Safety_Status.Routine_Error = CHILD_SAFETY_ROUTINE_ERROR_SETTING_FILE;
    177              }
    178          ////// Temporary solution until GESE is solved
    179          //    CS_Params.target_rpm = 40;
    180          //    CS_Params.target_accel = 50;
    181          //    CS_Params.target_deg = (sint32)CS_ANGLE_THRESHOLD_INT(120.0f);
    182          //    CS_Params.pause_after_run_sec = 5;
    183          //    Child_Safety_Status.Routine_Error = CHILD_SAFETY_ROUTINE_ERROR_NONE;
    184          }
   \   00000072   0xB002             ADD      SP,SP,#+8
   \   00000074   0x7E20             LDRB     R0,[R4, #+24]
   \   00000076   0xF000 0x003F      AND      R0,R0,#0x3F
   \   0000007A   0x7620             STRB     R0,[R4, #+24]
   \   0000007C   0xBD10             POP      {R4,PC}
   \                     ??RemoteFunctionChildSafety__Initialize_0: (+1)
   \   0000007E   0xB002             ADD      SP,SP,#+8
   \   00000080   0x7E20             LDRB     R0,[R4, #+24]
   \   00000082   0xF000 0x003F      AND      R0,R0,#0x3F
   \   00000086   0xF040 0x0040      ORR      R0,R0,#0x40
   \   0000008A   0x7620             STRB     R0,[R4, #+24]
   \   0000008C   0xBD10             POP      {R4,PC}          ;; return
    185          
    186          
    187          
    188          
    189          //---------------------------------------------------------------------------------------------------------------------
    190          /**
    191           * Remote Function API Function: Background function that is called periodically while the Remote Function is active.
    192           * @return ACTIVE if the Remote Function should be called periodically; otherwise INACTIVE.
    193           *                  If the Remote Function is active, and if this function returns INACTIVE,
    194           *                  then the REMOTE_FUNCTION_GET_DATA_ELEMENTS API function will be called one more time.
    195           */

   \                                 In section .text, align 4, keep-with-next
    196          ACTIVE_TYPE RemoteFunctionChildSafety__Background(void)
    197          {
   \                     RemoteFunctionChildSafety__Background: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    198              static sint32 drum_position_s32;
    199              ACTIVE_TYPE retval;
    200              MOTION_PROFILE_TYPE profile;
    201              uint32 temp_mci_error_list;
    202          
    203              switch(Child_Safety_Status.Routine_Status)
   \   00000002   0x....             LDR.N    R4,??DataTable3_1
   \   00000004   0x7E20             LDRB     R0,[R4, #+24]
   \   00000006   0xF000 0x0007      AND      R0,R0,#0x7
   \   0000000A   0xB086             SUB      SP,SP,#+24
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD005             BEQ.N    ??RemoteFunctionChildSafety__Background_1
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xF000 0x80BF      BEQ.W    ??RemoteFunctionChildSafety__Background_2
    204              {
    205                  case CHILD_SAFETY_ROUTINE_STATUS_PROCESSING:
    206          
    207                      // Check if the timeout is elapsed
    208                      if(SystemTimers__GetState(Child_Safety_Timeout_Handler) == SYSTEMTIMERS_STATE_DONE)
    209                      {
    210                          Child_Safety_Status.Routine_Error = CHILD_SAFETY_ROUTINE_ERROR_TIMEOUT;
    211                          Child_Safety_Status.Routine_Status = CHILD_SAFETY_ROUTINE_STATUS_DONE;
    212                      }
    213          
    214                      temp_mci_error_list = Mci__GetErrorList(MOTOR0);
    215          
    216                      // Check if there is error from motor control
    217                      if(temp_mci_error_list)
    218                      {
    219                      	if(Child_Safety_Status.Routine_Phase >= CHILD_SAFETY_ROUTINE_PHASE_ROTATING_X_DEG)
    220                      	{
    221          					Child_Safety_Status.Routine_Error = CHILD_SAFETY_ROUTINE_ERROR_FOUND;
    222          					Child_Safety_Status.Routine_Status = CHILD_SAFETY_ROUTINE_STATUS_DONE;
    223                      	}
    224                      	else
    225                      	{
    226                      		Mci__ClearError(MOTOR0);
    227                      	}
    228                      }
    229          
    230                      if(Child_Safety_Status.Routine_Error == CHILD_SAFETY_ROUTINE_ERROR_NONE)
    231                      {
    232                          switch(Child_Safety_Status.Routine_Phase)
    233                          {
    234          
    235                              // Just initialize variables used by remote child safety algorithm
    236                              case CHILD_SAFETY_ROUTINE_PHASE_INIT:
    237          
    238                                      //TODO: MOTION_ACTIVITY_ROTATE_X_DEG is not working (Motion module has to be reviewed) - Skip this phase. It is doing nothing.
    239          //                        // Set motion to child safety
    240          //                        profile.Rotate_X_Deg.Spin.Drum_Acceleration = CS_Params.target_accel;
    241          //                        profile.Rotate_X_Deg.Spin.Target_Drum_Velocity = CS_Params.target_rpm;
    242          //
    243          //                        profile.Rotate_X_Deg.Timeout = CS_Params.timeout;
    244          //                        profile.Rotate_X_Deg.Degrees = Child_Safety_Params->Drum_Angle;
    245          //                        profile.Rotate_X_Deg.Target_Rpm = CS_Params.target_rpm;
    246          //                        profile.Rotate_X_Deg.Second_Ramp_Rpm = Child_Safety_Params->Acceleration_2;
    247          //
    248          //                        // request to motion to lock the motion to child safety
    249          //                        Motion__Activity(MOTION_ACTIVITY_ROTATE_X_DEG, profile, MOTION_REQUESTOR_CHILD_SAFETY);
    250                                  Child_Safety_Status.Routine_Phase = CHILD_SAFETY_ROUTINE_PHASE_WAIT_MCI_IDLE;
    251                                  break;
    252          
    253          
    254          
    255                                  // Wait until Mci is ready
    256                              case CHILD_SAFETY_ROUTINE_PHASE_WAIT_MCI_IDLE:
    257                                  if( (Mci__GetDigital(MOTOR0,MCI_DI_IDLE) == TRUE) &&
    258                                  	(temp_mci_error_list == FALSE))
    259                                  {
    260                                      Child_Safety_Status.Routine_Phase = CHILD_SAFETY_ROUTINE_PHASE_ROTATING_X_DEG;
    261          
    262                                      profile.Spin.Target_Drum_Velocity = (MOTION_DRUM_VELOCITY_TYPE)CS_Params.target_rpm;
    263                                      profile.Spin.Drum_Acceleration = (MOTION_DRUM_ACCELERATION_TYPE)CS_Params.target_accel;
    264                                      Motion__Activity(MOTION_ACTIVITY_SPIN, profile, MOTION_REQUESTOR_CHILD_SAFETY);
    265          
    266                                      drum_position_s32 = 0;
    267                                  }
    268                                  break;
    269          
    270          
    271          
    272          
    273                              // Rotate the drum from certain degrees
    274                              case CHILD_SAFETY_ROUTINE_PHASE_ROTATING_X_DEG:
    275          
    276                                  //Mci__Run(MOTOR0, CS_Params.target_rpm, CS_Params.target_accel);
    277          
    278                                  //drum_position_s32 += (Mci__GetAnalog(MOTOR0, MCI_AI_ACTUAL_SPEED_S16)>>CS_SPEED_SHIFT);
    279                                  drum_position_s32 += (MciSensorsWm__GetAnalog(MOTOR0, MCI_AI_ACTUAL_SPEED_S16)>>CS_SPEED_SHIFT);
                                                                                               ^
Warning[Pe188]: enumerated type mixed with another type
    280          
    281                                  // If travelled angle is met.
    282                                  if(abs(drum_position_s32) >= CS_Params.target_deg)
                                            ^
Warning[Pe223]: function "abs" declared implicitly
    283                                  {
    284                                      // go to the next phase
    285                                      Child_Safety_Status.Routine_Phase = CHILD_SAFETY_ROUTINE_PHASE_PAUSE_TIME;
    286          
    287                                      // load pause time
    288                                      SystemTimers__SetMs(Child_Safety_Wait_Timer_Handler, (CS_Params.pause_after_run_sec * 1000));
    289          
    290                                      // request to stop motor
    291                                      //Mci__Stop(MOTOR0, CS_ACCEL_TO_LOWERS_ON);
    292                                      profile.Stop.Drum_Deceleration = CS_ACCEL_TO_LOWERS_ON;
    293                                      Motion__Activity(MOTION_ACTIVITY_STOP, profile, MOTION_REQUESTOR_CHILD_SAFETY);
    294                                      //Motion__Release(MOTION_REQUESTOR_CHILD_SAFETY);
    295          
    296                                  }
    297                                  break;
    298          
    299          
    300          
    301                              case CHILD_SAFETY_ROUTINE_PHASE_PAUSE_TIME:
    302          
    303                                  // request to stop motor
    304                                  //Mci__Stop(MOTOR0, CS_ACCEL_TO_LOWERS_ON);
    305                                  //profile.Stop.Drum_Deceleration = CS_ACCEL_TO_LOWERS_ON;
    306                                  //Motion__Activity(MOTION_ACTIVITY_STOP, profile, MOTION_REQUESTOR_CHILD_SAFETY);
    307                                  //Motion__Release(MOTION_REQUESTOR_CHILD_SAFETY);
    308          
    309                                  // check if the pause time is over
    310                                  if(SystemTimers__GetState(Child_Safety_Wait_Timer_Handler) == SYSTEMTIMERS_STATE_DONE)
    311                                  {
    312                                      // go to end
    313                                      Child_Safety_Status.Routine_Phase = CHILD_SAFETY_ROUTINE_PHASE_END;
    314                                  }
    315                                  break;
    316          
    317          
    318          
    319                              case CHILD_SAFETY_ROUTINE_PHASE_END:
    320                                  // go the done
    321                                  Child_Safety_Status.Routine_Status = CHILD_SAFETY_ROUTINE_STATUS_DONE;
    322                                  break;
    323          
    324          
    325          
    326                              case CHILD_SAFETY_ROUTINE_PHASE_IDLE:
    327                                  // in idle, just load the timeout timer
    328                                  SystemTimers__SetMs(Child_Safety_Timeout_Handler, (CS_Params.timeout*1000));
    329                                  break;
    330          
    331          
    332          
    333                              default:
    334                                  // left blank intentionally.
    335                                  break;
    336                          }
    337                          retval = ACTIVE;
    338                      }
    339                      else
    340                      {
    341                          Child_Safety_Status.Routine_Status = CHILD_SAFETY_ROUTINE_STATUS_DONE;
    342                      }
    343                      break;
    344          
    345          
    346          
    347                  case CHILD_SAFETY_ROUTINE_STATUS_DONE:
    348                      // Publish one event that child safety was performed and publish its results
    349                      sendStatusData((uint8)API013_CLIENT_FUNCTION_CHILD_SAFETY);
    350          
    351                      // go to idle
    352                      Child_Safety_Status.Routine_Status = CHILD_SAFETY_ROUTINE_STATUS_IDLE;
    353          
    354                      // release motion for other tasks
    355                      Motion__Release(MOTION_REQUESTOR_CHILD_SAFETY);
    356          
    357                      // Inactivate remote function module
    358                      retval = INACTIVE;
    359                      break;
    360          
    361          
    362          
    363                  default:
    364                      // left blank intentionally.
    365                      break;
    366              }
    367          
    368              return retval;
   \   00000016   0xB2E8             UXTB     R0,R5
   \   00000018   0xB006             ADD      SP,SP,#+24
   \   0000001A   0xBD70             POP      {R4-R6,PC}
   \                     ??RemoteFunctionChildSafety__Background_1: (+1)
   \   0000001C   0x8AA0             LDRH     R0,[R4, #+20]
   \   0000001E   0x.... 0x....      BL       SystemTimers__GetState
   \   00000022   0x2802             CMP      R0,#+2
   \   00000024   0xD105             BNE.N    ??RemoteFunctionChildSafety__Background_3
   \   00000026   0x7E20             LDRB     R0,[R4, #+24]
   \   00000028   0xF000 0x0038      AND      R0,R0,#0x38
   \   0000002C   0xF040 0x0082      ORR      R0,R0,#0x82
   \   00000030   0x7620             STRB     R0,[R4, #+24]
   \                     ??RemoteFunctionChildSafety__Background_3: (+1)
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       Mci__GetErrorList
   \   00000038   0x0006             MOVS     R6,R0
   \   0000003A   0xD00E             BEQ.N    ??RemoteFunctionChildSafety__Background_4
   \   0000003C   0x7E20             LDRB     R0,[R4, #+24]
   \   0000003E   0xF3C0 0x00C2      UBFX     R0,R0,#+3,#+3
   \   00000042   0x2804             CMP      R0,#+4
   \   00000044   0xDB06             BLT.N    ??RemoteFunctionChildSafety__Background_5
   \   00000046   0x7E20             LDRB     R0,[R4, #+24]
   \   00000048   0xF000 0x00F8      AND      R0,R0,#0xF8
   \   0000004C   0xF040 0x00C2      ORR      R0,R0,#0xC2
   \   00000050   0x7620             STRB     R0,[R4, #+24]
   \   00000052   0xE002             B.N      ??RemoteFunctionChildSafety__Background_4
   \                     ??RemoteFunctionChildSafety__Background_5: (+1)
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x.... 0x....      BL       Mci__ClearError
   \                     ??RemoteFunctionChildSafety__Background_4: (+1)
   \   0000005A   0x7E20             LDRB     R0,[R4, #+24]
   \   0000005C   0x0980             LSRS     R0,R0,#+6
   \   0000005E   0x7E20             LDRB     R0,[R4, #+24]
   \   00000060   0xF040 0x8090      BNE.W    ??RemoteFunctionChildSafety__Background_6
   \   00000064   0x08C0             LSRS     R0,R0,#+3
   \   00000066   0xF000 0x0007      AND      R0,R0,#0x7
   \   0000006A   0x1E40             SUBS     R0,R0,#+1
   \   0000006C   0x2805             CMP      R0,#+5
   \   0000006E   0xF200 0x8085      BHI.W    ??RemoteFunctionChildSafety__Background_7
   \   00000072   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??RemoteFunctionChildSafety__Background_0:
   \   00000076   0x7C 0x03          DC8      0x7C,0x3,0xD,0x34
   \              0x0D 0x34    
   \   0000007A   0x63 0x72          DC8      0x63,0x72
   \                     ??RemoteFunctionChildSafety__Background_8: (+1)
   \   0000007C   0x7E20             LDRB     R0,[R4, #+24]
   \   0000007E   0xF000 0x00C7      AND      R0,R0,#0xC7
   \   00000082   0xF040 0x0018      ORR      R0,R0,#0x18
   \   00000086   0x7620             STRB     R0,[R4, #+24]
   \   00000088   0x2501             MOVS     R5,#+1
   \   0000008A   0xB2E8             UXTB     R0,R5
   \   0000008C   0xB006             ADD      SP,SP,#+24
   \   0000008E   0xBD70             POP      {R4-R6,PC}
   \                     ??RemoteFunctionChildSafety__Background_9: (+1)
   \   00000090   0x2103             MOVS     R1,#+3
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x.... 0x....      BL       Mci__GetDigital
   \   00000098   0x2801             CMP      R0,#+1
   \   0000009A   0xBF08             IT       EQ 
   \   0000009C   0x2E00             CMPEQ    R6,#+0
   \   0000009E   0xD16D             BNE.N    ??RemoteFunctionChildSafety__Background_7
   \   000000A0   0x7E20             LDRB     R0,[R4, #+24]
   \   000000A2   0xF000 0x00C7      AND      R0,R0,#0xC7
   \   000000A6   0xF040 0x0020      ORR      R0,R0,#0x20
   \   000000AA   0x7620             STRB     R0,[R4, #+24]
   \   000000AC   0x6820             LDR      R0,[R4, #+0]
   \   000000AE   0xF8AD 0x000A      STRH     R0,[SP, #+10]
   \   000000B2   0x6860             LDR      R0,[R4, #+4]
   \   000000B4   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x9001             STR      R0,[SP, #+4]
   \   000000BC   0xA802             ADD      R0,SP,#+8
   \   000000BE   0xB083             SUB      SP,SP,#+12
   \   000000C0   0xC80C             LDM      R0!,{R2,R3}
   \   000000C2   0x4669             MOV      R1,SP
   \   000000C4   0xC10C             STM      R1!,{R2,R3}
   \   000000C6   0xC80C             LDM      R0!,{R2,R3}
   \   000000C8   0xC10C             STM      R1!,{R2,R3}
   \   000000CA   0xBC0E             POP      {R1-R3}
   \   000000CC   0x2002             MOVS     R0,#+2
   \   000000CE   0x.... 0x....      BL       Motion__Activity
   \   000000D2   0x2000             MOVS     R0,#+0
   \   000000D4   0x61E0             STR      R0,[R4, #+28]
   \   000000D6   0x2501             MOVS     R5,#+1
   \   000000D8   0xB2E8             UXTB     R0,R5
   \   000000DA   0xB006             ADD      SP,SP,#+24
   \   000000DC   0xBD70             POP      {R4-R6,PC}
   \                     ??RemoteFunctionChildSafety__Background_10: (+1)
   \   000000DE   0x2102             MOVS     R1,#+2
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x.... 0x....      BL       MciSensorsWm__GetAnalog
   \   000000E6   0x69E1             LDR      R1,[R4, #+28]
   \   000000E8   0xEB01 0x20A0      ADD      R0,R1,R0, ASR #+10
   \   000000EC   0x61E0             STR      R0,[R4, #+28]
   \   000000EE   0x.... 0x....      BL       abs
   \   000000F2   0x68A1             LDR      R1,[R4, #+8]
   \   000000F4   0x4288             CMP      R0,R1
   \   000000F6   0xDB41             BLT.N    ??RemoteFunctionChildSafety__Background_7
   \   000000F8   0x7E20             LDRB     R0,[R4, #+24]
   \   000000FA   0xF000 0x00C7      AND      R0,R0,#0xC7
   \   000000FE   0xF040 0x0028      ORR      R0,R0,#0x28
   \   00000102   0x7620             STRB     R0,[R4, #+24]
   \   00000104   0xF44F 0x717A      MOV      R1,#+1000
   \   00000108   0x68E0             LDR      R0,[R4, #+12]
   \   0000010A   0x4341             MULS     R1,R1,R0
   \   0000010C   0x8AE0             LDRH     R0,[R4, #+22]
   \   0000010E   0x.... 0x....      BL       SystemTimers__SetMs
   \   00000112   0xF647 0x70FF      MOVW     R0,#+32767
   \   00000116   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   \   0000011A   0x2000             MOVS     R0,#+0
   \   0000011C   0x9001             STR      R0,[SP, #+4]
   \   0000011E   0xA802             ADD      R0,SP,#+8
   \   00000120   0xB083             SUB      SP,SP,#+12
   \   00000122   0xC80C             LDM      R0!,{R2,R3}
   \   00000124   0x4669             MOV      R1,SP
   \   00000126   0xC10C             STM      R1!,{R2,R3}
   \   00000128   0xC80C             LDM      R0!,{R2,R3}
   \   0000012A   0xC10C             STM      R1!,{R2,R3}
   \   0000012C   0xBC0E             POP      {R1-R3}
   \   0000012E   0x2000             MOVS     R0,#+0
   \   00000130   0x.... 0x....      BL       Motion__Activity
   \   00000134   0x2501             MOVS     R5,#+1
   \   00000136   0xB2E8             UXTB     R0,R5
   \   00000138   0xB006             ADD      SP,SP,#+24
   \   0000013A   0xBD70             POP      {R4-R6,PC}
   \                     ??RemoteFunctionChildSafety__Background_11: (+1)
   \   0000013C   0x8AE0             LDRH     R0,[R4, #+22]
   \   0000013E   0x.... 0x....      BL       SystemTimers__GetState
   \   00000142   0x2802             CMP      R0,#+2
   \   00000144   0xD11A             BNE.N    ??RemoteFunctionChildSafety__Background_7
   \   00000146   0x7E20             LDRB     R0,[R4, #+24]
   \   00000148   0xF000 0x00C7      AND      R0,R0,#0xC7
   \   0000014C   0xF040 0x0030      ORR      R0,R0,#0x30
   \   00000150   0x7620             STRB     R0,[R4, #+24]
   \   00000152   0x2501             MOVS     R5,#+1
   \   00000154   0xB2E8             UXTB     R0,R5
   \   00000156   0xB006             ADD      SP,SP,#+24
   \   00000158   0xBD70             POP      {R4-R6,PC}
   \                     ??RemoteFunctionChildSafety__Background_12: (+1)
   \   0000015A   0x7E20             LDRB     R0,[R4, #+24]
   \   0000015C   0xF000 0x00F8      AND      R0,R0,#0xF8
   \   00000160   0xF040 0x0002      ORR      R0,R0,#0x2
   \   00000164   0x7620             STRB     R0,[R4, #+24]
   \   00000166   0x2501             MOVS     R5,#+1
   \   00000168   0xB2E8             UXTB     R0,R5
   \   0000016A   0xB006             ADD      SP,SP,#+24
   \   0000016C   0xBD70             POP      {R4-R6,PC}
   \                     ??RemoteFunctionChildSafety__Background_13: (+1)
   \   0000016E   0x6920             LDR      R0,[R4, #+16]
   \   00000170   0xF44F 0x717A      MOV      R1,#+1000
   \   00000174   0x4341             MULS     R1,R1,R0
   \   00000176   0x8AA0             LDRH     R0,[R4, #+20]
   \   00000178   0x.... 0x....      BL       SystemTimers__SetMs
   \                     ??RemoteFunctionChildSafety__Background_7: (+1)
   \   0000017C   0x2501             MOVS     R5,#+1
   \   0000017E   0xB2E8             UXTB     R0,R5
   \   00000180   0xB006             ADD      SP,SP,#+24
   \   00000182   0xBD70             POP      {R4-R6,PC}
   \                     ??RemoteFunctionChildSafety__Background_6: (+1)
   \   00000184   0xF000 0x00F8      AND      R0,R0,#0xF8
   \   00000188   0xF040 0x0002      ORR      R0,R0,#0x2
   \   0000018C   0x7620             STRB     R0,[R4, #+24]
   \   0000018E   0xB006             ADD      SP,SP,#+24
   \   00000190   0xB2E8             UXTB     R0,R5
   \   00000192   0xBD70             POP      {R4-R6,PC}
   \                     ??RemoteFunctionChildSafety__Background_2: (+1)
   \   00000194   0x2201             MOVS     R2,#+1
   \   00000196   0xF104 0x0118      ADD      R1,R4,#+24
   \   0000019A   0x2001             MOVS     R0,#+1
   \   0000019C   0x.... 0x....      BL       API013RemoteFunction__PublishStatus
   \   000001A0   0x7E20             LDRB     R0,[R4, #+24]
   \   000001A2   0xF000 0x00F8      AND      R0,R0,#0xF8
   \   000001A6   0x7620             STRB     R0,[R4, #+24]
   \   000001A8   0x2000             MOVS     R0,#+0
   \   000001AA   0x.... 0x....      BL       Motion__Release
   \   000001AE   0x2500             MOVS     R5,#+0
   \   000001B0   0xB2E8             UXTB     R0,R5
   \   000001B2   0xB006             ADD      SP,SP,#+24
   \   000001B4   0xBD70             POP      {R4-R6,PC}       ;; return
    369          }

   \                                 In section .bss, align 4
   \                     CS_Params:
   \   00000000                      DS8 20
   \   00000014                      DS8 2
   \   00000016                      DS8 2
   \   00000018                      DS8 4
   \   0000001C                      DS8 4
    370          
    371          
    372          //---------------------------------------------------------------------------------------------------------------------
    373          /**
    374           * Remote Function API Function: Execute a Remote Function command.
    375           * @param command = The command that the Remote Function should execute.
    376           *                  A command value of 0 indicates that the Remote Function should disable itself.
    377           *                  A command value of 1 indicates that the Remote Function should enable itself.
    378           * @param params = A pointer to the parameter bytes that are being passed along with the command.
    379           *                  The params memory is only valid during the function call.
    380           * @param size = The number of parameter bytes that are being passed along with the command.
    381           * @retval ANALYSIS_COMMAND_RESPONSE_INACTIVE = The analysis is inactive. Do not call the remote function.
    382           * @retval ANALYSIS_COMMAND_RESPONSE_ACTIVE = The analysis is active. Call the remote function periodically.
    383           * @retval ANALYSIS_COMMAND_RESPONSE_INVALID = The command is not supported.
    384           */

   \                                 In section .text, align 2, keep-with-next
    385          REMOTE_FUNCTION_CONTROL_RESPONSE_TYPE  RemoteFunctionChildSafety__DoCommand(uint8 command, uint8* params, uint8 size)
                                                                                                                   ^
Remark[Pe826]: parameter "params" was never referenced

  REMOTE_FUNCTION_CONTROL_RESPONSE_TYPE  RemoteFunctionChildSafety__DoCommand(uint8 command, uint8* params, uint8 size)
                                                                                                                  ^
"C:\Data\Python\Windy_sBpm_Floating\source\ProjectSpecific\Application\RemoteFunctions\RemoteFunctionChildSafety.c",385  Remark[Pe826]: 
          parameter "size" was never referenced
    386          {
   \                     RemoteFunctionChildSafety__DoCommand: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    387          	REMOTE_FUNCTION_CONTROL_RESPONSE_TYPE response;
    388          	MOTION_PROFILE_TYPE profile;
    389          
    390          	response = REMOTE_FUNCTION_CONTROL_RESPONSE_INVALID;
   \   00000004   0xF04F 0x35FF      MOV      R5,#-1
    391          
    392              switch(command)
   \   00000008   0x....             LDR.N    R4,??DataTable3_1
   \   0000000A   0xB110             CBZ.N    R0,??RemoteFunctionChildSafety__DoCommand_0
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD01F             BEQ.N    ??RemoteFunctionChildSafety__DoCommand_1
   \   00000010   0xE037             B.N      ??RemoteFunctionChildSafety__DoCommand_2
    393              {
    394          
    395                  case REMOTE_FUNCTION_COMMAND_DISABLE:
    396          
    397                      Child_Safety_Status.Routine_Status = CHILD_SAFETY_ROUTINE_STATUS_IDLE;
   \                     ??RemoteFunctionChildSafety__DoCommand_0: (+1)
   \   00000012   0x7E20             LDRB     R0,[R4, #+24]
   \   00000014   0xF000 0x00F8      AND      R0,R0,#0xF8
   \   00000018   0x7620             STRB     R0,[R4, #+24]
    398          
    399                      // Reset error if they were not related to settings file parameters
    400                      if(Child_Safety_Status.Routine_Error != CHILD_SAFETY_ROUTINE_ERROR_SETTING_FILE)
   \   0000001A   0x0980             LSRS     R0,R0,#+6
   \   0000001C   0x2801             CMP      R0,#+1
   \   0000001E   0xD003             BEQ.N    ??RemoteFunctionChildSafety__DoCommand_3
    401                      {
    402                          Child_Safety_Status.Routine_Error = CHILD_SAFETY_ROUTINE_ERROR_NONE;
   \   00000020   0x7E20             LDRB     R0,[R4, #+24]
   \   00000022   0xF000 0x003F      AND      R0,R0,#0x3F
   \   00000026   0x7620             STRB     R0,[R4, #+24]
    403                      }
    404          
    405                      response = REMOTE_FUNCTION_CONTROL_RESPONSE_INACTIVE;
    406          
    407                      //Mci__Stop(MOTOR0, 50);
    408                      profile.Stop.Drum_Deceleration = 50;
   \                     ??RemoteFunctionChildSafety__DoCommand_3: (+1)
   \   00000028   0x2032             MOVS     R0,#+50
   \   0000002A   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   \   0000002E   0x2500             MOVS     R5,#+0
    409                      Motion__Activity(MOTION_ACTIVITY_STOP, profile, MOTION_REQUESTOR_CHILD_SAFETY);
   \   00000030   0x9501             STR      R5,[SP, #+4]
   \   00000032   0xA802             ADD      R0,SP,#+8
   \   00000034   0xB083             SUB      SP,SP,#+12
   \   00000036   0xC80C             LDM      R0!,{R2,R3}
   \   00000038   0x4669             MOV      R1,SP
   \   0000003A   0xC10C             STM      R1!,{R2,R3}
   \   0000003C   0xC80C             LDM      R0!,{R2,R3}
   \   0000003E   0xC10C             STM      R1!,{R2,R3}
   \   00000040   0xBC0E             POP      {R1-R3}
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       Motion__Activity
    410          
    411                      // release motion for other tasks
    412                      Motion__Release(MOTION_REQUESTOR_CHILD_SAFETY);
   \   00000048   0x4628             MOV      R0,R5
   \   0000004A   0x.... 0x....      BL       Motion__Release
    413                      break;
   \   0000004E   0xE018             B.N      ??RemoteFunctionChildSafety__DoCommand_2
    414          
    415          
    416          
    417          
    418                  case REMOTE_FUNCTION_COMMAND_ENABLE:
    419          
    420                      // Accept command if errors were not related to settings file parameters
    421                      if(Child_Safety_Status.Routine_Error != CHILD_SAFETY_ROUTINE_ERROR_SETTING_FILE)
   \                     ??RemoteFunctionChildSafety__DoCommand_1: (+1)
   \   00000050   0x7E20             LDRB     R0,[R4, #+24]
   \   00000052   0x0980             LSRS     R0,R0,#+6
   \   00000054   0x2801             CMP      R0,#+1
   \   00000056   0xD014             BEQ.N    ??RemoteFunctionChildSafety__DoCommand_2
    422                      {
    423                          if( (Child_Safety_Status.Routine_Status == CHILD_SAFETY_ROUTINE_STATUS_IDLE) ||
    424                              (Child_Safety_Status.Routine_Status == CHILD_SAFETY_ROUTINE_STATUS_DONE) )
   \   00000058   0x7E20             LDRB     R0,[R4, #+24]
   \   0000005A   0x2107             MOVS     R1,#+7
   \   0000005C   0x4208             TST      R0,R1
   \   0000005E   0xBF1C             ITT      NE 
   \   00000060   0xF000 0x0007      ANDNE    R0,R0,#0x7
   \   00000064   0x2802             CMPNE    R0,#+2
   \   00000066   0xD10B             BNE.N    ??RemoteFunctionChildSafety__DoCommand_4
    425                          {
    426                          	Mci__ClearError(MOTOR0);
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x.... 0x....      BL       Mci__ClearError
    427                              SystemTimers__SetMs(Child_Safety_Timeout_Handler, (CS_Params.timeout*1000));
   \   0000006E   0x6920             LDR      R0,[R4, #+16]
   \   00000070   0xF44F 0x717A      MOV      R1,#+1000
   \   00000074   0x4341             MULS     R1,R1,R0
   \   00000076   0x8AA0             LDRH     R0,[R4, #+20]
   \   00000078   0x.... 0x....      BL       SystemTimers__SetMs
    428          
    429                              Child_Safety_Status.Routine_Phase = CHILD_SAFETY_ROUTINE_PHASE_INIT;
    430                              Child_Safety_Status.Routine_Status = CHILD_SAFETY_ROUTINE_STATUS_PROCESSING;
    431                              Child_Safety_Status.Routine_Error = CHILD_SAFETY_ROUTINE_ERROR_NONE;
   \   0000007C   0x2011             MOVS     R0,#+17
   \   0000007E   0x7620             STRB     R0,[R4, #+24]
    432                          }
    433          
    434                          response = REMOTE_FUNCTION_CONTROL_RESPONSE_ACTIVE;
   \                     ??RemoteFunctionChildSafety__DoCommand_4: (+1)
   \   00000080   0x2501             MOVS     R5,#+1
    435                      }
    436                      break;
    437          
    438          
    439          
    440                  default:
    441                      //
    442                      break;
    443              }
    444          
    445              sendStatusData((uint8)API013_CLIENT_FUNCTION_CHILD_SAFETY);
   \                     ??RemoteFunctionChildSafety__DoCommand_2: (+1)
   \   00000082   0x2201             MOVS     R2,#+1
   \   00000084   0xF104 0x0118      ADD      R1,R4,#+24
   \   00000088   0x2001             MOVS     R0,#+1
   \   0000008A   0x.... 0x....      BL       API013RemoteFunction__PublishStatus
    446          
    447              return response;
   \   0000008E   0x4628             MOV      R0,R5
   \   00000090   0xB007             ADD      SP,SP,#+28
   \   00000092   0xBD30             POP      {R4,R5,PC}       ;; return
    448          }
    449          
    450          
    451          //---------------------------------------------------------------------------------------------------------------------
    452          /**
    453           * Remote Function API Function: Get the current status of the Remote Function.
    454           * @param status = This function sets the referenced pointer to point to the buffer that holds the function status data.
    455           * @param size = This function sets the referenced byte to the number of bytes in the function status data.
    456           */

   \                                 In section .text, align 2, keep-with-next
    457          void RemoteFunctionChildSafety__GetStatus(uint8** status, uint8* size)
                                                                   ^
Remark[Pe826]: parameter "status" was never referenced

  void RemoteFunctionChildSafety__GetStatus(uint8** status, uint8* size)
                                                                   ^
"C:\Data\Python\Windy_sBpm_Floating\source\ProjectSpecific\Application\RemoteFunctions\RemoteFunctionChildSafety.c",457  Remark[Pe826]: 
          parameter "size" was never referenced
    458          {
    459          	sendStatusData((uint8)API013_CLIENT_FUNCTION_CHILD_SAFETY);
   \                     RemoteFunctionChildSafety__GetStatus: (+1)
   \   00000000   0x2201             MOVS     R2,#+1
   \   00000002   0x....             LDR.N    R1,??DataTable3_2
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x.... 0x....      B.W      API013RemoteFunction__PublishStatus
    460          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x3B19999A         DC32     0x3b19999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     CS_Params

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     CS_Params+0x18
    461          
    462          
    463          //=====================================================================================================================
    464          //  --- Private Functions ---------------------------------------------------------------------------------------------
    465          //=====================================================================================================================
    466          
    467          static void sendStatusData (uint8 server_function_index_local)
    468          {
    469          	API013RemoteFunction__PublishStatus (server_function_index_local, ((uint8*)&Child_Safety_Status), sizeof(Child_Safety_Status));
    470          }
    471          
    472          
    473          
    474          
    475          
    476          
    477          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      52   RemoteFunctionChildSafety__Background
        40   -> API013RemoteFunction__PublishStatus
        40   -> MciSensorsWm__GetAnalog
        40   -> Mci__ClearError
        40   -> Mci__GetDigital
        40   -> Mci__GetErrorList
        40   -> Motion__Activity
        40   -> Motion__Release
        40   -> SystemTimers__GetState
        40   -> SystemTimers__SetMs
        40   -> abs
      52   RemoteFunctionChildSafety__DoCommand
        40   -> API013RemoteFunction__PublishStatus
        40   -> Mci__ClearError
        40   -> Motion__Activity
        40   -> Motion__Release
        40   -> SystemTimers__SetMs
       0   RemoteFunctionChildSafety__GetStatus
         0   -> API013RemoteFunction__PublishStatus
      16   RemoteFunctionChildSafety__Initialize
        16   -> SettingFile__BasicLoader
        16   -> SettingFile__IsValid
        16   -> SystemTimers__GetHandle
        16   -> __aeabi_memclr4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
      32  CS_Params
          Child_Safety_Timeout_Handler
          Child_Safety_Wait_Timer_Handler
          Child_Safety_Status
          drum_position_s32
       4  Child_Safety_Params
     438  RemoteFunctionChildSafety__Background
     148  RemoteFunctionChildSafety__DoCommand
      10  RemoteFunctionChildSafety__GetStatus
     142  RemoteFunctionChildSafety__Initialize

 
  36 bytes in section .bss
 750 bytes in section .text
 
 750 bytes of CODE memory
  36 bytes of DATA memory

Errors: none
Warnings: 2
