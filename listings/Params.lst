###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.5.7591/W32 for ARM        13/Mar/2025  15:31:11
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  Category\Application\Params\Params.c
#    Command line =  
#        -I./ -I../cx/ -I../cx/inc/ -ICategory/ -ICategory/Application/
#        -ICategory/Application/ApplicationWasherMcu/
#        -ICategory/Application/ApplicationWasherMcu/AnalysisAverage/
#        -ICategory/Application/ApplicationWasherMcu/Arbitration/
#        -ICategory/Application/ApplicationWasherMcu/Motion/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Motion/
#        -ICategory/Application/ApplicationWasherMcu/Motion/MotionError/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Pulse/
#        -ICategory/Application/ApplicationWasherMcu/Motion/RotateXDeg/
#        -ICategory/Application/ApplicationWasherMcu/Motion/SpinDrum/
#        -ICategory/Application/ApplicationWasherMcu/Motion/StopDrum/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Wash/
#        -ICategory/Application/ApplicationWasherMcu/MotorActivity/
#        -ICategory/Application/ApplicationWasherMcu/SpeedMaintain/
#        -ICategory/Application/BandLimiter/ -ICategory/Application/Beagle/
#        -ICategory/Application/CommandManager/
#        -ICategory/Application/DigitalFilter/
#        -ICategory/Application/Extraction/
#        -ICategory/Application/Extraction/CodeGeneration/
#        -ICategory/Application/Extraction/CodeGeneration/SharedUtils/
#        -ICategory/Application/Extraction/Dependencies/
#        -ICategory/Application/FaultManager/
#        -ICategory/Application/MciSensorsWm/ -ICategory/Application/MciSetWm/
#        -ICategory/Application/MciSetWmFloat/ -ICategory/Application/ParamEst/
#        -ICategory/Application/ParamEstExc/ -ICategory/Application/Params/
#        -ICategory/Application/ProtocolInfo/
#        -ICategory/Application/ProtocolMainExternal/
#        -ICategory/Application/SRMotorSafetyInfoParamsMgr_Core/
#        -ICategory/Application/ThermalModel/
#        -ICategory/Application/ThermalModel/ThermalModelCore/
#        -ICategory/Common/ -ICategory/Common/BoardDebugging/
#        -ICategory/Common/MasterCommander/
#        -ICategory/Common/MasterCommander/Source/
#        -ICategory/Common/MasterCommander/Source/HAL/ -ICategory/Hbl/
#        -IProjectSpecific/ -IProjectSpecific/Application/
#        -IProjectSpecific/Application/API007App/
#        -IProjectSpecific/Application/Api221_Filter_Mci_Err/
#        -IProjectSpecific/Application/ModeManagement/
#        -IProjectSpecific/Application/ProductInfo/
#        -IProjectSpecific/Application/RemoteFunctions/
#        -IProjectSpecific/Application/SRMcuSpeedMonitor/
#        -IProjectSpecific/Application/ThermalModel/
#        -IProjectSpecific/CommonCore/ -IProjectSpecific/Driver/
#        -IProjectSpecific/Indesit/ -IProjectSpecific/MasterCommander/
#        -IProjectSpecific/Mci/ -IProjectSpecific/Mci/Mcl/
#        -IProjectSpecific/Mci/Mcl/old_xls/ -IXCategory/
#        -IXCategory/Application/ -IXCategory/Application/MciParametersLoader/
#        -IXCategory/Application/Mode/ -IXCategory/Application/Reveal_APIs/
#        -IXCategory/Application/Reveal_APIs/API003Disc/
#        -IXCategory/Application/Reveal_APIs/API005LowLevel/
#        -IXCategory/Application/Reveal_APIs/API007Data/
#        -IXCategory/Application/Reveal_APIs/API009System/
#        -IXCategory/Application/Reveal_APIs/API010PollVar/
#        -IXCategory/Application/Reveal_APIs/API011AppCtr/
#        -IXCategory/Application/Reveal_APIs/API013RemoteFunction/
#        -IXCategory/Application/Reveal_APIs/API018Diagnostic/
#        -IXCategory/Application/Reveal_APIs/API019ProductInfo/
#        -IXCategory/Application/Reveal_APIs/API220MotorControl/
#        -IXCategory/Application/Reveal_APIs/API220MotorControl/API/
#        -IXCategory/Application/Reveal_APIs/API221MotionCtrl/
#        -IXCategory/Application/Reveal_APIs/SRAPI020Safety/
#        -IXCategory/Application/SFUpdater/ -IXCategory/Common/
#        -IXCategory/Common/Crc16/ -IXCategory/Common/Crc8/
#        -IXCategory/Common/Log/ -IXCategory/Common/SettingFile/
#        -IXCategory/Common/SRClockMonitor/ -IXCategory/Common/SRData/
#        -IXCategory/Common/SRException/ -IXCategory/Common/SRFlow/
#        -IXCategory/Common/SRIsrMonitor/ -IXCategory/Common/SRMain/
#        -IXCategory/Common/SRMcuSpeedMonitor/ -IXCategory/Common/SRPowerMgr/
#        -IXCategory/Common/SRSignature/ -IXCategory/Common/SRSystemConfig/
#        -IXCategory/Common/SRTimerReference/ -IXCategory/Common/SystemConfig/
#        -IXCategory/Common/SystemTimers/ -IXCategory/Common/Utilities/
#        -IXCategory/Driver/ -IXCategory/Driver/API/
#        -IXCategory/Driver/API/Comparator/ -IXCategory/Driver/API/DataFlash/
#        -IXCategory/Driver/API/Dma/ -IXCategory/Driver/API/Flash/
#        -IXCategory/Driver/API/Gpio/ -IXCategory/Driver/API/Micro/
#        -IXCategory/Driver/API/Spi/ -IXCategory/Driver/API/SRMCAtod/
#        -IXCategory/Driver/API/SRMCPwm/ -IXCategory/Driver/API/TimerInterrupt/
#        -IXCategory/Driver/API/Uart/ -IXCategory/Driver/Comparator/
#        -IXCategory/Driver/DataFlash/ -IXCategory/Driver/Dma/
#        -IXCategory/Driver/Flash/ -IXCategory/Driver/Gpio/
#        -IXCategory/Driver/Micro/ -IXCategory/Driver/Spi/
#        -IXCategory/Driver/SRMCAtod/ -IXCategory/Driver/SRMCPwm/
#        -IXCategory/Driver/TimerInterrupt/ -IXCategory/Driver/Uart/
#        -IXCategory/Hbl/ -IXCategory/Hbl/Mci/
#        -IXCategory/Hbl/Mci/InverterTemp/ -IXCategory/Hbl/Mci/Mcl/
#        -IXCategory/Hbl/Mci/Mcl/Braking/ -IXCategory/Hbl/Mci/Mcl/MacroBlocks/
#        -IXCategory/Hbl/Mci/Mcl/MclFvt/ -IXCategory/Hbl/Mci/Mcl/MicroBlocks/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/ClrkPark/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Filters/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Math/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Pi/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/PwmModulation/
#        -IXCategory/Hbl/Mci/Mcl/ResistanceEstimation/
#        -IXCategory/Hbl/Mci/PowerModuleManager/
#        -IXCategory/Hbl/Mci/SpeedRefGen/ -IXCategory/Hbl/Mci/SurgeRelay/
#        -IXCategory/Hbl/SRMotorSafetyMgr/
#        -IXCategory/Hbl/SRMotorSafetyMgr/API/ -IXCategory/Service/
#        -IXCategory/Service/Reveal/ -IXCategory/Service/Win/ --remarks
#        --no_tbaa --debug --use_c++_inline --only_stdout --dlib_config
#        ..\cx\inc\DLib_Config_Normal.h -r -D
#        ENABLE_JUMP_TO_APPLICATION_WITHOUT_IAP_FIRMWARE -D ARM_MATH_CM4 -e
#        --silent --endian=little --cpu Cortex-M4 --fpu=VFPv4_sp -Ohs -o
#        Params.obj -l ..\listings\Params.lst
#        Category\Application\Params\Params.c
#    List file    =  ..\listings\Params.lst
#    Object file  =  Params.obj
#
###############################################################################

C:\Data\Repository\WindyStrip_DTC_Orca\source\Category\Application\Params\Params.c
      1          /**
      2           *  @file
      3           *  @brief      Params
      4           *
      5           *  @details    Params
      6           *
      7           *
      8           *  @copyright  Copyright 2016. Whirlpool Corporation. All rights reserved - CONFIDENTIAL
      9           */
     10          //---------------------------------------------------------------------------------------------------------------------
     11          //---------------------------------------------------------------------------------------------------------------------
     12          //-------------------------------------- Include Files ----------------------------------------------------------------
     13          #include "C_Extensions.h"
     14          #include "Params.h"

  PACKED typedef struct
         ^
"C:\Data\Repository\WindyStrip_DTC_Orca\source\XCategory\Common\SettingFile\SettingFile.h",39  Remark[Pe082]: 
          storage class is not first
     15          #include "SettingFile.h"
     16          
     17          
     18          //-------------------------------------- PUBLIC (Variables) -----------------------------------------------------------
     19          //Variable setting using communication with main uC

   \                                 In section .bss, align 4
     20          BOOL_TYPE Parms_Ready;
   \                     Parms_Ready:
   \   00000000                      DS8 1
   \   00000001                      DS8 3
     21          
     22          SF_APPLICATION_PARAMS_TYPE SF_Application_Params; //To be backward compatible with EOL -> Max acceleration key unlock.
     23          
     24          uint8 Mci_ClassA_Dtc[sizeof(MCL_PARAMS_DISPL1_TYPE)];
   \                     Mci_ClassA_Dtc:
   \   00000004                      DS8 436
     25          uint8 Mci_ClassA_Motor_Lut[sizeof(MCL_PARAMS_DISPL3_TYPE)];
   \                     Mci_ClassA_Motor_Lut:
   \   000001B8                      DS8 200
     26          uint8 Mci_ClassA_Speed_Ctrl[sizeof(MCL_PARAMS_DISPL4_TYPE)];
   \                     Mci_ClassA_Speed_Ctrl:
   \   00000280                      DS8 104
     27          uint8 Mci_ClassA_Mtpa[sizeof(MCL_PARAMS_DISPL9_TYPE)];
   \                     Mci_ClassA_Mtpa:
   \   000002E8                      DS8 136
     28          uint8 Mci_ClassA_Mtpv[sizeof(MCL_PARAMS_DISPL10_TYPE)];
   \                     Mci_ClassA_Mtpv:
   \   00000370                      DS8 136
     29          uint8 Mci_ClassA_Ote[51*4];
   \                     Mci_ClassA_Ote:
   \   000003F8                      DS8 204
     30          
     31          uint8 Mci_ClassB_Prm[SAFETY_MOTOR_PARAMETERS_NUM];
   \                     Mci_ClassB_Prm:
   \   000004C4                      DS8 52
     32          
     33          uint8 Mca_Set_Wm[70*2];
   \                     Mca_Set_Wm:
   \   000004F8                      DS8 140
     34          uint8 Mca_Sensor_Wm[6*2];
   \                     Mca_Sensor_Wm:
   \   00000584                      DS8 12

   \                                 In section .bss, align 4
   \                     SF_Application_Params:
   \   00000000                      DS8 332
     35          
     36          //-------------------------------------- PRIVATE (Variables, Constants & Defines) -------------------------------------
     37          
     38          //-------------------------------------- PRIVATE (Function Prototypes) ------------------------------------------------
     39          
     40          
     41          //=====================================================================================================================
     42          //-------------------------------------- Public Functions -------------------------------------------------------------
     43          //=====================================================================================================================
     44          
     45          //---------------------------------------------------------------------------------------------------------------------
     46          /**
     47           *  @brief      It Initializes the module Params and its variables
     48           *
     49           */

   \                                 In section .text, align 2, keep-with-next
     50          void Params__Initialize(void)
     51          {
     52          
     53          }
   \                     Params__Initialize: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     54          
     55          
     56          
     57          //---------------------------------------------------------------------------------------------------------------------
     58          /**
     59           * @brief   Loads setting file data for a displacement within a pointer.
     60           * @param   pointer_id: See PARAMS_LOADER_TYPE
     61           * @param   displacement: The displacement (or offset) into the pointer where the data is located
     62           * @param   sf_data_ptr: Pointer to the setting file data (see SETTINGFILE_LOADER_TYPE)
     63           * @return  TRUE if valid data was found at the given pointer and displacement.
     64           */

   \                                 In section .text, align 4, keep-with-next
     65          PASS_FAIL_TYPE Params__BasicLoader(SETTINGFILE_OFFSET_TYPE pointer_id, uint16 displacement, PARAMS_LOADER_TYPE * sf_data_ptr)
     66          {
   \                     Params__BasicLoader: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
     67          
     68              PASS_FAIL_TYPE ret_val = PASS;
     69          
     70              if(Params__IsReady() == TRUE)
   \   00000002   0x....             LDR.N    R4,??DataTable0
   \   00000004   0x7825             LDRB     R5,[R4, #+0]
   \   00000006   0x4613             MOV      R3,R2
   \   00000008   0x2201             MOVS     R2,#+1
   \   0000000A   0x2D01             CMP      R5,#+1
   \   0000000C   0xD160             BNE.N    ??Params__BasicLoader_1
     71              {
     72                  switch (pointer_id)
   \   0000000E   0xF44F 0x7504      MOV      R5,#+528
   \   00000012   0x1B40             SUBS     R0,R0,R5
   \   00000014   0xD004             BEQ.N    ??Params__BasicLoader_2
   \   00000016   0x1E40             SUBS     R0,R0,#+1
   \   00000018   0xD03C             BEQ.N    ??Params__BasicLoader_3
   \   0000001A   0x1E40             SUBS     R0,R0,#+1
   \   0000001C   0xD044             BEQ.N    ??Params__BasicLoader_4
   \   0000001E   0xE057             B.N      ??Params__BasicLoader_1
     73                  {
     74                      case SF_PTR_MCU_CLASS_A_MCI:
     75          
     76                      //////////////////////////////////////////////////////////////////
     77                      /////////////////// Class A Motor PARAMETERS /////////////////////
     78                      //////////////////////////////////////////////////////////////////
     79                      switch (displacement)
   \                     ??Params__BasicLoader_2: (+1)
   \   00000020   0x1E49             SUBS     R1,R1,#+1
   \   00000022   0x2909             CMP      R1,#+9
   \   00000024   0xD854             BHI.N    ??Params__BasicLoader_1
   \   00000026   0xE8DF 0xF001      TBB      [PC, R1]
   \                     ??Params__BasicLoader_0:
   \   0000002A   0x05 0x53          DC8      0x5,0x53,0xD,0x15
   \              0x0D 0x15    
   \   0000002E   0x53 0x53          DC8      0x53,0x53,0x2D,0x53
   \              0x2D 0x53    
   \   00000032   0x1D 0x25          DC8      0x1D,0x25
     80                      {
     81                          case SF_DISPL_MOTOR_PARAMS_DTC:
     82                              sf_data_ptr->Data = Mci_ClassA_Dtc;
   \                     ??Params__BasicLoader_5: (+1)
   \   00000034   0x1D20             ADDS     R0,R4,#+4
   \   00000036   0x6018             STR      R0,[R3, #+0]
     83                              sf_data_ptr->Length = sizeof(Mci_ClassA_Dtc);
   \   00000038   0xF44F 0x70DA      MOV      R0,#+436
   \   0000003C   0x8098             STRH     R0,[R3, #+4]
     84                              break;
     85          
     86                          case SF_DISPL_MOTOR_PARAMS_LUT:
     87                              sf_data_ptr->Data = Mci_ClassA_Motor_Lut;
     88                              sf_data_ptr->Length = sizeof(Mci_ClassA_Motor_Lut);
     89                              break;
     90          
     91                          case SF_DISPL_MOTOR_SPEED_CTRL:
     92                              sf_data_ptr->Data = Mci_ClassA_Speed_Ctrl;
     93                              sf_data_ptr->Length = sizeof(Mci_ClassA_Speed_Ctrl);
     94                              break;
     95          
     96                          case SF_DISPL_MTPA_LUT:
     97                              sf_data_ptr->Data = Mci_ClassA_Mtpa;
     98                              sf_data_ptr->Length = sizeof(Mci_ClassA_Mtpa);
     99                              break;
    100          
    101                          case SF_DISPL_MTPV_LUT:
    102                              sf_data_ptr->Data = Mci_ClassA_Mtpv;
    103                              sf_data_ptr->Length = sizeof(Mci_ClassA_Mtpv);
    104                              break;
    105          
    106                          case SF_DISPL_MOTOR_OTE:
    107                              sf_data_ptr->Data = Mci_ClassA_Ote;
    108                              sf_data_ptr->Length = sizeof(Mci_ClassA_Ote);
    109                              break;
    110          
    111                          default:
    112                              ret_val = FAIL;
    113                              break;
    114                      }
    115                      break;
    116                      //////////////////////////////////////////////////////////////////
    117                      /////////////////// Class A Motor PARAMETERS /////////////////////
    118                      //////////////////////////////////////////////////////////////////
    119          
    120          
    121          
    122                      case SF_PTR_MCU_CLASS_B_MCI:
    123                          if(displacement == SF_DISPL_MOTOR_SR_PARAMS)
    124                          {
    125                              sf_data_ptr->Data = Mci_ClassB_Prm;
    126                              sf_data_ptr->Length = sizeof(Mci_ClassB_Prm);
    127                          }
    128                          else
    129                          {
    130                              ret_val = FAIL;
    131                          }
    132                      break;
    133          
    134          
    135          
    136                      case SF_PTR_MCU_MCA:
    137                         if(displacement == SF_DISPL_MOTOR_MCI_SET_WM)
    138                         {
    139                             sf_data_ptr->Data = Mca_Set_Wm;
    140                             sf_data_ptr->Length = sizeof(Mca_Set_Wm);
    141                         }
    142                         else if(displacement == SF_DISPL_MOTOR_MCI_SENSORS_WM)
    143                         {
    144                             sf_data_ptr->Data = Mca_Sensor_Wm;
    145                             sf_data_ptr->Length = sizeof(Mca_Sensor_Wm);
    146                         }
    147                         else
    148                         {
    149                             ret_val = FAIL;
    150                         }
    151                      break;
    152          
    153                      default:
    154                          ret_val = FAIL;
    155                      break;
    156          
    157                  }
    158              }
    159              else
    160              {//Parameters are not loaded
    161                  ret_val = FAIL;
    162              }
    163          
    164              return ret_val;
   \   0000003E   0x4610             MOV      R0,R2
   \   00000040   0xBC30             POP      {R4,R5}
   \   00000042   0x4770             BX       LR
   \                     ??Params__BasicLoader_6: (+1)
   \   00000044   0xF504 0x70DC      ADD      R0,R4,#+440
   \   00000048   0x6018             STR      R0,[R3, #+0]
   \   0000004A   0x20C8             MOVS     R0,#+200
   \   0000004C   0x8098             STRH     R0,[R3, #+4]
   \   0000004E   0x4610             MOV      R0,R2
   \   00000050   0xBC30             POP      {R4,R5}
   \   00000052   0x4770             BX       LR
   \                     ??Params__BasicLoader_7: (+1)
   \   00000054   0xF504 0x7020      ADD      R0,R4,#+640
   \   00000058   0x6018             STR      R0,[R3, #+0]
   \   0000005A   0x2068             MOVS     R0,#+104
   \   0000005C   0x8098             STRH     R0,[R3, #+4]
   \   0000005E   0x4610             MOV      R0,R2
   \   00000060   0xBC30             POP      {R4,R5}
   \   00000062   0x4770             BX       LR
   \                     ??Params__BasicLoader_8: (+1)
   \   00000064   0xF504 0x703A      ADD      R0,R4,#+744
   \   00000068   0x6018             STR      R0,[R3, #+0]
   \   0000006A   0x2088             MOVS     R0,#+136
   \   0000006C   0x8098             STRH     R0,[R3, #+4]
   \   0000006E   0x4610             MOV      R0,R2
   \   00000070   0xBC30             POP      {R4,R5}
   \   00000072   0x4770             BX       LR
   \                     ??Params__BasicLoader_9: (+1)
   \   00000074   0xF504 0x705C      ADD      R0,R4,#+880
   \   00000078   0x6018             STR      R0,[R3, #+0]
   \   0000007A   0x2088             MOVS     R0,#+136
   \   0000007C   0x8098             STRH     R0,[R3, #+4]
   \   0000007E   0x4610             MOV      R0,R2
   \   00000080   0xBC30             POP      {R4,R5}
   \   00000082   0x4770             BX       LR
   \                     ??Params__BasicLoader_10: (+1)
   \   00000084   0xF504 0x707E      ADD      R0,R4,#+1016
   \   00000088   0x6018             STR      R0,[R3, #+0]
   \   0000008A   0x20CC             MOVS     R0,#+204
   \   0000008C   0x8098             STRH     R0,[R3, #+4]
   \   0000008E   0x4610             MOV      R0,R2
   \   00000090   0xBC30             POP      {R4,R5}
   \   00000092   0x4770             BX       LR
   \                     ??Params__BasicLoader_3: (+1)
   \   00000094   0x2901             CMP      R1,#+1
   \   00000096   0xD11B             BNE.N    ??Params__BasicLoader_1
   \   00000098   0xF204 0x40C4      ADDW     R0,R4,#+1220
   \   0000009C   0x6018             STR      R0,[R3, #+0]
   \   0000009E   0x2034             MOVS     R0,#+52
   \   000000A0   0x8098             STRH     R0,[R3, #+4]
   \   000000A2   0x4610             MOV      R0,R2
   \   000000A4   0xBC30             POP      {R4,R5}
   \   000000A6   0x4770             BX       LR
   \                     ??Params__BasicLoader_4: (+1)
   \   000000A8   0x2901             CMP      R1,#+1
   \   000000AA   0xD107             BNE.N    ??Params__BasicLoader_11
   \   000000AC   0xF504 0x609F      ADD      R0,R4,#+1272
   \   000000B0   0x6018             STR      R0,[R3, #+0]
   \   000000B2   0x208C             MOVS     R0,#+140
   \   000000B4   0x8098             STRH     R0,[R3, #+4]
   \   000000B6   0x4610             MOV      R0,R2
   \   000000B8   0xBC30             POP      {R4,R5}
   \   000000BA   0x4770             BX       LR
   \                     ??Params__BasicLoader_11: (+1)
   \   000000BC   0x2902             CMP      R1,#+2
   \   000000BE   0xD107             BNE.N    ??Params__BasicLoader_1
   \   000000C0   0xF204 0x5084      ADDW     R0,R4,#+1412
   \   000000C4   0x6018             STR      R0,[R3, #+0]
   \   000000C6   0x200C             MOVS     R0,#+12
   \   000000C8   0x8098             STRH     R0,[R3, #+4]
   \   000000CA   0x4610             MOV      R0,R2
   \   000000CC   0xBC30             POP      {R4,R5}
   \   000000CE   0x4770             BX       LR
   \                     ??Params__BasicLoader_1: (+1)
   \   000000D0   0xBC30             POP      {R4,R5}
   \   000000D2   0x2200             MOVS     R2,#+0
   \   000000D4   0x4610             MOV      R0,R2
   \   000000D6   0x4770             BX       LR               ;; return
    165          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     Parms_Ready
    166          
    167          //=====================================================================================================================
    168          //-------------------------------------- Private Functions ------------------------------------------------------------
    169          //=====================================================================================================================

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Params__BasicLoader
       0   Params__Initialize


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
     216  Params__BasicLoader
       2  Params__Initialize
    1424  Parms_Ready
          Mci_ClassA_Dtc
          Mci_ClassA_Motor_Lut
          Mci_ClassA_Speed_Ctrl
          Mci_ClassA_Mtpa
          Mci_ClassA_Mtpv
          Mci_ClassA_Ote
          Mci_ClassB_Prm
          Mca_Set_Wm
          Mca_Sensor_Wm
     332  SF_Application_Params

 
 1 756 bytes in section .bss
   222 bytes in section .text
 
   222 bytes of CODE memory
 1 756 bytes of DATA memory

Errors: none
Warnings: none
