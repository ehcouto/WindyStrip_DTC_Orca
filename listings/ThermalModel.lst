###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.5.7591/W32 for ARM        13/Mar/2025  15:31:14
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  Category\Application\ThermalModel\ThermalModel.c
#    Command line =  
#        -I./ -I../cx/ -I../cx/inc/ -ICategory/ -ICategory/Application/
#        -ICategory/Application/ApplicationWasherMcu/
#        -ICategory/Application/ApplicationWasherMcu/AnalysisAverage/
#        -ICategory/Application/ApplicationWasherMcu/Arbitration/
#        -ICategory/Application/ApplicationWasherMcu/Motion/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Motion/
#        -ICategory/Application/ApplicationWasherMcu/Motion/MotionError/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Pulse/
#        -ICategory/Application/ApplicationWasherMcu/Motion/RotateXDeg/
#        -ICategory/Application/ApplicationWasherMcu/Motion/SpinDrum/
#        -ICategory/Application/ApplicationWasherMcu/Motion/StopDrum/
#        -ICategory/Application/ApplicationWasherMcu/Motion/Wash/
#        -ICategory/Application/ApplicationWasherMcu/MotorActivity/
#        -ICategory/Application/ApplicationWasherMcu/SpeedMaintain/
#        -ICategory/Application/BandLimiter/ -ICategory/Application/Beagle/
#        -ICategory/Application/CommandManager/
#        -ICategory/Application/DigitalFilter/
#        -ICategory/Application/Extraction/
#        -ICategory/Application/Extraction/CodeGeneration/
#        -ICategory/Application/Extraction/CodeGeneration/SharedUtils/
#        -ICategory/Application/Extraction/Dependencies/
#        -ICategory/Application/FaultManager/
#        -ICategory/Application/MciSensorsWm/ -ICategory/Application/MciSetWm/
#        -ICategory/Application/MciSetWmFloat/ -ICategory/Application/ParamEst/
#        -ICategory/Application/ParamEstExc/ -ICategory/Application/Params/
#        -ICategory/Application/ProtocolInfo/
#        -ICategory/Application/ProtocolMainExternal/
#        -ICategory/Application/SRMotorSafetyInfoParamsMgr_Core/
#        -ICategory/Application/ThermalModel/
#        -ICategory/Application/ThermalModel/ThermalModelCore/
#        -ICategory/Common/ -ICategory/Common/BoardDebugging/
#        -ICategory/Common/MasterCommander/
#        -ICategory/Common/MasterCommander/Source/
#        -ICategory/Common/MasterCommander/Source/HAL/ -ICategory/Hbl/
#        -IProjectSpecific/ -IProjectSpecific/Application/
#        -IProjectSpecific/Application/API007App/
#        -IProjectSpecific/Application/Api221_Filter_Mci_Err/
#        -IProjectSpecific/Application/ModeManagement/
#        -IProjectSpecific/Application/ProductInfo/
#        -IProjectSpecific/Application/RemoteFunctions/
#        -IProjectSpecific/Application/SRMcuSpeedMonitor/
#        -IProjectSpecific/Application/ThermalModel/
#        -IProjectSpecific/CommonCore/ -IProjectSpecific/Driver/
#        -IProjectSpecific/Indesit/ -IProjectSpecific/MasterCommander/
#        -IProjectSpecific/Mci/ -IProjectSpecific/Mci/Mcl/
#        -IProjectSpecific/Mci/Mcl/old_xls/ -IXCategory/
#        -IXCategory/Application/ -IXCategory/Application/MciParametersLoader/
#        -IXCategory/Application/Mode/ -IXCategory/Application/Reveal_APIs/
#        -IXCategory/Application/Reveal_APIs/API003Disc/
#        -IXCategory/Application/Reveal_APIs/API005LowLevel/
#        -IXCategory/Application/Reveal_APIs/API007Data/
#        -IXCategory/Application/Reveal_APIs/API009System/
#        -IXCategory/Application/Reveal_APIs/API010PollVar/
#        -IXCategory/Application/Reveal_APIs/API011AppCtr/
#        -IXCategory/Application/Reveal_APIs/API013RemoteFunction/
#        -IXCategory/Application/Reveal_APIs/API018Diagnostic/
#        -IXCategory/Application/Reveal_APIs/API019ProductInfo/
#        -IXCategory/Application/Reveal_APIs/API220MotorControl/
#        -IXCategory/Application/Reveal_APIs/API220MotorControl/API/
#        -IXCategory/Application/Reveal_APIs/API221MotionCtrl/
#        -IXCategory/Application/Reveal_APIs/SRAPI020Safety/
#        -IXCategory/Application/SFUpdater/ -IXCategory/Common/
#        -IXCategory/Common/Crc16/ -IXCategory/Common/Crc8/
#        -IXCategory/Common/Log/ -IXCategory/Common/SettingFile/
#        -IXCategory/Common/SRClockMonitor/ -IXCategory/Common/SRData/
#        -IXCategory/Common/SRException/ -IXCategory/Common/SRFlow/
#        -IXCategory/Common/SRIsrMonitor/ -IXCategory/Common/SRMain/
#        -IXCategory/Common/SRMcuSpeedMonitor/ -IXCategory/Common/SRPowerMgr/
#        -IXCategory/Common/SRSignature/ -IXCategory/Common/SRSystemConfig/
#        -IXCategory/Common/SRTimerReference/ -IXCategory/Common/SystemConfig/
#        -IXCategory/Common/SystemTimers/ -IXCategory/Common/Utilities/
#        -IXCategory/Driver/ -IXCategory/Driver/API/
#        -IXCategory/Driver/API/Comparator/ -IXCategory/Driver/API/DataFlash/
#        -IXCategory/Driver/API/Dma/ -IXCategory/Driver/API/Flash/
#        -IXCategory/Driver/API/Gpio/ -IXCategory/Driver/API/Micro/
#        -IXCategory/Driver/API/Spi/ -IXCategory/Driver/API/SRMCAtod/
#        -IXCategory/Driver/API/SRMCPwm/ -IXCategory/Driver/API/TimerInterrupt/
#        -IXCategory/Driver/API/Uart/ -IXCategory/Driver/Comparator/
#        -IXCategory/Driver/DataFlash/ -IXCategory/Driver/Dma/
#        -IXCategory/Driver/Flash/ -IXCategory/Driver/Gpio/
#        -IXCategory/Driver/Micro/ -IXCategory/Driver/Spi/
#        -IXCategory/Driver/SRMCAtod/ -IXCategory/Driver/SRMCPwm/
#        -IXCategory/Driver/TimerInterrupt/ -IXCategory/Driver/Uart/
#        -IXCategory/Hbl/ -IXCategory/Hbl/Mci/
#        -IXCategory/Hbl/Mci/InverterTemp/ -IXCategory/Hbl/Mci/Mcl/
#        -IXCategory/Hbl/Mci/Mcl/Braking/ -IXCategory/Hbl/Mci/Mcl/MacroBlocks/
#        -IXCategory/Hbl/Mci/Mcl/MclFvt/ -IXCategory/Hbl/Mci/Mcl/MicroBlocks/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/ClrkPark/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Filters/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Math/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/Pi/
#        -IXCategory/Hbl/Mci/Mcl/MicroBlocks/PwmModulation/
#        -IXCategory/Hbl/Mci/Mcl/ResistanceEstimation/
#        -IXCategory/Hbl/Mci/PowerModuleManager/
#        -IXCategory/Hbl/Mci/SpeedRefGen/ -IXCategory/Hbl/Mci/SurgeRelay/
#        -IXCategory/Hbl/SRMotorSafetyMgr/
#        -IXCategory/Hbl/SRMotorSafetyMgr/API/ -IXCategory/Service/
#        -IXCategory/Service/Reveal/ -IXCategory/Service/Win/ --remarks
#        --no_tbaa --debug --use_c++_inline --only_stdout --dlib_config
#        ..\cx\inc\DLib_Config_Normal.h -r -D
#        ENABLE_JUMP_TO_APPLICATION_WITHOUT_IAP_FIRMWARE -D ARM_MATH_CM4 -e
#        --silent --endian=little --cpu Cortex-M4 --fpu=VFPv4_sp -Ohs -o
#        ThermalModel.obj -l ..\listings\ThermalModel.lst
#        Category\Application\ThermalModel\ThermalModel.c
#    List file    =  ..\listings\ThermalModel.lst
#    Object file  =  ThermalModel.obj
#
###############################################################################

C:\Data\Repository\WindyStrip_DTC_Orca\source\Category\Application\ThermalModel\ThermalModel.c
      1          /**
      2           *  @file
      3           *
      4           *  @brief      Basic description of file contents
      5           *
      6           *  @details    Detailed description of the file contents
      7           *
      8           *  @section    Applicable_Documents
      9           *                  List here all the applicable documents if needed. <tr>
     10           *
     11           *  $Header: ThermalModel.c 1.13.1.3.1.1.1.3 2016/05/25 07:46:59EDT Eduardo Couto (HENRIE2) Exp  $
     12           *
     13           *  @copyright  Copyright 2013-$Date: 2016/05/25 07:46:59EDT $. Whirlpool Corporation. All rights reserved - CONFIDENTIAL
     14           */
     15          //---------------------------------------------------------------------------------------------------------------------
     16          //---------------------------------------------------------------------------------------------------------------------
     17          
     18          
     19          //-------------------------------------- Include Files ----------------------------------------------------------------
     20          #include "ThermalModel.h"
     21          #include "ThermalModelCore.h"
     22          #include "Mci.h"
     23          #include <math.h>
     24          
     25          #ifndef OTE_SET_PARAMETERS_INTERNAL
     26          #include "string.h"
     27          #include "SettingFile.h"
     28          #include "Mode.h"
     29          
     30          #if (PLATFORM_USED == PLATFORM_2_5_BASED)
     31          #include "Params.h"
     32          #endif
     33          
     34          #endif
     35          //-------------------------------------- PUBLIC (Variables) -----------------------------------------------------------
     36          
     37          //-------------------------------------- PRIVATE (Variables, Constants & Defines) -------------------------------------

   \                                 In section .bss, align 4
     38          static uint16 Thermal_Model_Start = 0;
     39          static uint16 Set_Temperature_From_Outside = 0;
     40          
     41          #define THERMAL_MODEL_AUTO_RESET
     42          #ifdef THERMAL_MODEL_AUTO_RESET
     43              #define THERMAL_MODEL_COUNTER_MAX (60*60/0.025)//144000
     44          #endif
     45          
     46          #ifdef THERMAL_MODEL_AUTO_RESET
     47          static unsigned long Thermal_Model_Reset_Counter;
     48          #endif
     49          
     50          float TemperatureFromRes;
     51          float DriftAdjust;
     52          float ResetModel;
     53          
     54          static BOOL_TYPE ParamsReady;
   \                     ParamsReady:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \   00000004                      DS8 2
   \   00000006                      DS8 2
   \   00000008                      DS8 4
   \                     TemperatureFromRes:
   \   0000000C                      DS8 4
   \                     DriftAdjust:
   \   00000010                      DS8 4
   \                     ResetModel:
   \   00000014                      DS8 4
     55          
     56          //-------------------------------------- PRIVATE (Function Prototypes) ------------------------------------------------
     57          
     58          //=====================================================================================================================
     59          //-------------------------------------- Public Functions -------------------------------------------------------------
     60          //=====================================================================================================================
     61          
     62          //---------------------------------------------------------------------------------------------------------------------
     63          /**
     64           *  @brief      It Initializes the module ThermalModel and its variables and in case of failure this function is used
     65           *              to restart the module.
     66           *
     67           */

   \                                 In section .text, align 2, keep-with-next
     68          void ThermalModel__Initialize(void)
     69          {
     70              Thermal_Model_Start = 0;
   \                     ThermalModel__Initialize: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3_1
     71          #ifdef THERMAL_MODEL_AUTO_RESET
     72              Thermal_Model_Reset_Counter = 0;
     73          #endif
     74              TemperatureFromRes = 25.0f;
     75              DriftAdjust = 0.0f;
     76              ResetModel = 0.0f;
     77          
     78              ParamsReady = FALSE;
     79          #ifndef OTE_SET_PARAMETERS_INTERNAL
     80          
     81              if (Mode__IsProgrammingEngaged() == FALSE) //Mci is Initialized and parameters not loaded
     82              {
     83          #if (PLATFORM_USED == NUCLEUS_BASED)
     84                  SETTINGFILE_LOADER_TYPE Set_OTE_Prm_Ptr;
     85                  if((SettingFile__IsValid() == TRUE) &&
     86                      (SettingFile__BasicLoader(SF_PTR_MCU_CLASS_A_MCI, SF_DISPL_MOTOR_OTE, &Set_OTE_Prm_Ptr) == PASS))
     87          #else
     88                  PARAMS_LOADER_TYPE Set_OTE_Prm_Ptr;
     89                  if(Params__BasicLoader(SF_PTR_MCU_CLASS_A_MCI, SF_DISPL_MOTOR_OTE, &Set_OTE_Prm_Ptr) == PASS)
     90          #endif
     91                  {
     92                      ThermalModelCore_Params = (OTE2_PARAMS_TYPE *)(void*)(Set_OTE_Prm_Ptr.Data);
     93                      ParamsReady = TRUE;
     94                  }
     95              }
     96          #else
     97          	ThermalModelCore_Params = (OTE2_PARAMS_TYPE *) (ThermalModelCore_ConstP.MapleSimParameters_Value);
   \   00000002   0x....             LDR.N    R2,??DataTable3_2
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x8041             STRH     R1,[R0, #+2]
   \   00000008   0x6081             STR      R1,[R0, #+8]
   \   0000000A   0x....             LDR.N    R1,??DataTable3_3  ;; 0x41c80000
   \   0000000C   0x60C1             STR      R1,[R0, #+12]
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x6101             STR      R1,[R0, #+16]
   \   00000012   0x6141             STR      R1,[R0, #+20]
   \   00000014   0x....             LDR.N    R1,??DataTable3_4
   \   00000016   0x6011             STR      R1,[R2, #+0]
     98          	ParamsReady = TRUE;
   \   00000018   0x2101             MOVS     R1,#+1
   \   0000001A   0x7001             STRB     R1,[R0, #+0]
     99          #endif
    100          
    101              ThermalModelCore_initialize();
   \   0000001C   0x.... 0x....      B.W      ThermalModelCore_initialize
    102          
    103          }
    104          
    105          //---------------------------------------------------------------------------------------------------------------------
    106          /**
    107           *  @brief This function is used to calculate the thermal model itself.
    108           */

   \                                 In section .text, align 4, keep-with-next
    109          void ThermalModel__Handler25ms(void)
    110          {
   \                     ThermalModel__Handler25ms: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
    111              sint32 value;
                            ^
Warning[Pe177]: variable "value" was declared but never referenced
    112          
    113              if(ParamsReady == TRUE)
   \   00000004   0x....             LDR.N    R4,??DataTable3_1
   \   00000006   0xED2D 0x8B02      VPUSH    {D8}
   \   0000000A   0x7820             LDRB     R0,[R4, #+0]
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD143             BNE.N    ??ThermalModel__Handler25ms_0
    114              {
    115          		if(Set_Temperature_From_Outside == 1)
   \   00000010   0x88A0             LDRH     R0,[R4, #+4]
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xD10D             BNE.N    ??ThermalModel__Handler25ms_1
    116          		{
    117          			if(Thermal_Model_Start == 0)
   \   00000016   0x8860             LDRH     R0,[R4, #+2]
   \   00000018   0xEEB7 0x0A00      VMOV.F32 S0,#1.0
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xBF03             ITTTE    EQ 
    118          			{
    119          				ResetModel = 1.0f;
   \   00000020   0xED84 0x0A05      VSTREQ   S0,[R4, #+20]
    120          				Thermal_Model_Start = 1;
   \   00000024   0x2001             MOVEQ    R0,#+1
   \   00000026   0x8060             STRHEQ   R0,[R4, #+2]
    121          			}
    122          			else
    123          			{
    124          				DriftAdjust = 1.0f;
   \   00000028   0xED84 0x0A04      VSTRNE   S0,[R4, #+16]
    125          			}
    126          #ifdef THERMAL_MODEL_AUTO_RESET
    127          			Thermal_Model_Reset_Counter = 0;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x60A0             STR      R0,[R4, #+8]
    128          #endif
    129          			Set_Temperature_From_Outside = 0;
   \   00000030   0x80A0             STRH     R0,[R4, #+4]
    130          		}
    131          
    132          		ThermalModelCore_U.Current = (1.0f/(65536.0f)) * Mci__GetAnalog(MOTOR0, MCI_AI_RMS_MOTOR_CURRENT_S16);
   \                     ??ThermalModel__Handler25ms_1: (+1)
   \   00000032   0xED9F 0x....      VLDR.W   S16,??DataTable3  ;; 0x37800000
   \   00000036   0x....             LDR.N    R5,??DataTable3_5
   \   00000038   0x2105             MOVS     R1,#+5
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x.... 0x....      BL       Mci__GetAnalog
   \   00000040   0xEE00 0x0A10      VMOV     S0,R0
   \   00000044   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000048   0xEE20 0x0A08      VMUL.F32 S0,S0,S16
   \   0000004C   0xED85 0x0A03      VSTR     S0,[R5, #+12]
    133          		ThermalModelCore_U.Speed = (1.0f/(65536.0f)) * Mci__GetAnalog(MOTOR0, MCI_AI_MEAN_SPEED_S16);
   \   00000050   0x2104             MOVS     R1,#+4
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x.... 0x....      BL       Mci__GetAnalog
   \   00000058   0xEE00 0x0A10      VMOV     S0,R0
    134          		ThermalModelCore_U.Temperature = TemperatureFromRes;
   \   0000005C   0x68E0             LDR      R0,[R4, #+12]
   \   0000005E   0x6028             STR      R0,[R5, #+0]
   \   00000060   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
    135          		ThermalModelCore_U.DriftCorrection = DriftAdjust;
   \   00000064   0x6920             LDR      R0,[R4, #+16]
   \   00000066   0x6068             STR      R0,[R5, #+4]
   \   00000068   0xEE20 0x0A08      VMUL.F32 S0,S0,S16
    136          		ThermalModelCore_U.Reset = ResetModel;
   \   0000006C   0x6960             LDR      R0,[R4, #+20]
   \   0000006E   0xED85 0x0A04      VSTR     S0,[R5, #+16]
   \   00000072   0x60A8             STR      R0,[R5, #+8]
    137          		ThermalModelCore_step();
   \   00000074   0x.... 0x....      BL       ThermalModelCore_step
    138          
    139          		DriftAdjust = 0.0f;
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x6120             STR      R0,[R4, #+16]
    140          		ResetModel = 0.0f;
   \   0000007C   0x6160             STR      R0,[R4, #+20]
    141          
    142          //		value = (sint32)(ThermalModelCore_Y.WindingTemperature * 65536.0f);
    143          //		Mci__SetAnalog(MOTOR0, MCI_AO_MOTOR_TEMPERATURE_S16, value); //OTE new temperature
    144          
    145          #ifdef THERMAL_MODEL_AUTO_RESET
    146          		Thermal_Model_Reset_Counter++;
    147          		if (Thermal_Model_Reset_Counter > THERMAL_MODEL_COUNTER_MAX)
   \   0000007E   0x....             LDR.N    R1,??DataTable3_6  ;; 0x23281
   \   00000080   0x68A0             LDR      R0,[R4, #+8]
   \   00000082   0x1C40             ADDS     R0,R0,#+1
   \   00000084   0x60A0             STR      R0,[R4, #+8]
   \   00000086   0x4288             CMP      R0,R1
   \   00000088   0xD30B             BCC.N    ??ThermalModel__Handler25ms_2
    148          		{
    149          			//ThermalModel__Initialize();
    150          			Thermal_Model_Start = 0;
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x8060             STRH     R0,[R4, #+2]
    151          			Thermal_Model_Reset_Counter = 0;
   \   0000008E   0x60A0             STR      R0,[R4, #+8]
    152          		}
    153          #endif
    154              }else
    155              {
    156          #ifndef OTE_SET_PARAMETERS_INTERNAL
    157          
    158          
    159          
    160          		if (Mode__IsProgrammingEngaged() == FALSE) //Mci is Initialized and parameters not loaded
    161          		{
    162          #if (PLATFORM_USED == NUCLEUS_BASED)
    163          		    SETTINGFILE_LOADER_TYPE Set_OTE_Prm_Ptr;
    164          		    if((SettingFile__IsValid() == TRUE) &&
    165          		        (SettingFile__BasicLoader(SF_PTR_MCU_CLASS_A_MCI, SF_DISPL_MOTOR_OTE, &Set_OTE_Prm_Ptr) == PASS))
    166          #else
    167          		    PARAMS_LOADER_TYPE Set_OTE_Prm_Ptr;
    168                      if(Params__BasicLoader(SF_PTR_MCU_CLASS_A_MCI, SF_DISPL_MOTOR_OTE, &Set_OTE_Prm_Ptr) == PASS)
    169          #endif
    170          		    {
    171          		        ThermalModelCore_Params = (OTE2_PARAMS_TYPE *)(void*)(Set_OTE_Prm_Ptr.Data);
    172          		        ParamsReady = TRUE;
    173          		    }
    174          		}
    175          
    176          #else
    177          		ThermalModelCore_Params = (OTE2_PARAMS_TYPE *) (ThermalModelCore_ConstP.MapleSimParameters_Value);
    178          		ParamsReady = TRUE;
    179          #endif
    180              }
    181          }
   \   00000090   0xECBD 0x8B02      VPOP     {D8}
   \   00000094   0xB001             ADD      SP,SP,#+4
   \   00000096   0xBD30             POP      {R4,R5,PC}
   \                     ??ThermalModel__Handler25ms_0: (+1)
   \   00000098   0x....             LDR.N    R1,??DataTable3_2
   \   0000009A   0x....             LDR.N    R0,??DataTable3_4
   \   0000009C   0x6008             STR      R0,[R1, #+0]
   \   0000009E   0x2001             MOVS     R0,#+1
   \   000000A0   0x7020             STRB     R0,[R4, #+0]
   \                     ??ThermalModel__Handler25ms_2: (+1)
   \   000000A2   0xECBD 0x8B02      VPOP     {D8}
   \   000000A6   0xB001             ADD      SP,SP,#+4
   \   000000A8   0xBD30             POP      {R4,R5,PC}       ;; return
    182          
    183          

   \                                 In section .text, align 2, keep-with-next
    184          void ThermalModel__SetStatorTemperature(float input_temperature)
    185          {
    186              TemperatureFromRes = input_temperature;
   \                     ThermalModel__SetStatorTemperature: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3_1
   \   00000002   0xED80 0x0A03      VSTR     S0,[R0, #+12]
    187          
    188              Set_Temperature_From_Outside = 1;
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x8081             STRH     R1,[R0, #+4]
    189          
    190          }
   \   0000000A   0x4770             BX       LR               ;; return
    191          

   \                                 In section .text, align 2, keep-with-next
    192          float ThermalModel__GetStatorTemperature(void)
    193          {
    194              return (ThermalModelCore_Y.WindingTemperature);
   \                     ThermalModel__GetStatorTemperature: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3_7
   \   00000002   0xED90 0x0A02      VLDR     S0,[R0, #+8]
   \   00000006   0x4770             BX       LR               ;; return
    195          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x37800000         DC32     0x37800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     ParamsReady

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     ThermalModelCore_Params

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x41C80000         DC32     0x41c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     ThermalModelCore_ConstP+0x1C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     ThermalModelCore_U

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x00023281         DC32     0x23281

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     ThermalModelCore_Y

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ThermalModel__GetStatorTemperature
      24   ThermalModel__Handler25ms
        24   -> Mci__GetAnalog
        24   -> ThermalModelCore_step
       0   ThermalModel__Initialize
         0   -> ThermalModelCore_initialize
       0   ThermalModel__SetStatorTemperature


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
      24  ParamsReady
          Thermal_Model_Start
          Set_Temperature_From_Outside
          Thermal_Model_Reset_Counter
          TemperatureFromRes
          DriftAdjust
          ResetModel
       8  ThermalModel__GetStatorTemperature
     170  ThermalModel__Handler25ms
      32  ThermalModel__Initialize
      12  ThermalModel__SetStatorTemperature

 
  24 bytes in section .bss
 254 bytes in section .text
 
 254 bytes of CODE memory
  24 bytes of DATA memory

Errors: none
Warnings: 1
